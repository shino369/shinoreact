{"version":3,"file":"static/js/316.a07fb354.chunk.js","mappings":"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","sources":["app/pages/chat/index.tsx"],"sourcesContent":["// import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setActiveRoute } from \"store/activeRoute\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"app/hooks/firebase\";\r\nimport { RootState } from \"store\";\r\nimport moment from \"moment\";\r\nimport { Input, Table } from \"reactstrap\";\r\nimport { useFirestoreQuery } from \"app/hooks/commonHook\";\r\nimport \"./index.scss\";\r\nimport { ChatItem, Icon, InputField } from \"app/components\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst Schema = Yup.object().shape({\r\n  msg: Yup.string().required(\"required\"),\r\n});\r\n\r\ntype FormItem = {\r\n  msg: string;\r\n};\r\n\r\nexport const ChatPage = () => {\r\n  const isMobile = useMediaQuery({ query: `(max-width: 576px)` });\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((rootState: RootState) => rootState.auth);\r\n  const [newMessage, setNewMessage] = useState<any[]>([]);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(setActiveRoute(\"chat\"));\r\n  }, [dispatch]);\r\n  const _q = query(\r\n    collection(db, \"messages\"),\r\n    orderBy(\"createdAt\"),\r\n    limit(100)\r\n  );\r\n  const messages = useFirestoreQuery(_q);\r\n  const scrollRef = useRef<any>(null);\r\n  const [paddingBottom, setPaddingBottom] = useState<string>(\r\n    isMobile ? \"7rem\" : \"1rem\"\r\n  );\r\n  const [rows, setRows] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    isMobile\r\n      ? window.scrollTo({\r\n          top: document.body.scrollHeight,\r\n          behavior: \"smooth\",\r\n        })\r\n      : scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\r\n  }, [messages]);\r\n\r\n  // debounce scroll\r\n\r\n  // add window scroll event listener\r\n  useEffect(() => {\r\n    const windowScroll = _.debounce((e) => {\r\n      // console.log(window.scrollY);\r\n      // console.log(document.body.scrollHeight);\r\n      if (isMobile) {\r\n        const scrollTop = window.scrollY;\r\n        const scrollHeight = document.body.scrollHeight;\r\n        const clientHeight = window.innerHeight;\r\n        // console.log(scrollTop + clientHeight, scrollHeight);\r\n        if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n          setVisible(true);\r\n        } else {\r\n          setVisible(false);\r\n        }\r\n      }\r\n    }, 100);\r\n\r\n    window.addEventListener(\"scroll\", windowScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", windowScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleScroll = _.debounce((e) => {\r\n    if (!isMobile) {\r\n      const scrollTop = e.target.scrollTop;\r\n      const scrollHeight = e.target.scrollHeight;\r\n      const clientHeight = e.target.clientHeight;\r\n      // console.log(scrollTop + clientHeight, scrollHeight);\r\n      if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n        setVisible(true);\r\n      } else {\r\n        setVisible(false);\r\n      }\r\n    }\r\n  }, 100);\r\n\r\n  // const handleScroll = (e: any) => {\r\n  //   const scrollTop = e.target.scrollTop;\r\n  //   const scrollHeight = e.target.scrollHeight;\r\n  //   const clientHeight = e.target.clientHeight;\r\n  //   console.log(scrollTop + clientHeight, scrollHeight);\r\n  //   if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n  //     setVisible(true);\r\n  //   }else{\r\n  //     setVisible(false);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   const _q = query(collection(db, \"messages\"), orderBy(\"createdAt\"), limit(100));\r\n  //   const unsubscribe = onSnapshot(_q, (snapshot) => {\r\n  //     const data = snapshot.docs.map(\r\n  //       (doc) => ({\r\n  //         ...doc.data(),\r\n  //         id: doc.id,\r\n  //       })\r\n  //     )\r\n  //     // snapshot.docChanges().forEach((change) => {\r\n  //     //   if (change.type === \"added\") {\r\n  //     //     console.log(\"New: \", change.doc.data());\r\n  //     //   }\r\n  //     //   if (change.type === \"modified\") {\r\n  //     //     console.log(\"Modified: \", change.doc.data());\r\n  //     //   }\r\n  //     //   if (change.type === \"removed\") {\r\n  //     //     console.log(\"Removed: \", change.doc.data());\r\n  //     //   }\r\n  //     //   const msg = change.doc.data();\r\n  //     //   setMessages((prev) => [...prev, msg]);\r\n  //     // });\r\n  //   });\r\n\r\n  //   return () => {\r\n  //     unsubscribe();\r\n  //   };\r\n  // }, []);\r\n\r\n  const onSubmit = async (\r\n    values: FormItem,\r\n    actions: FormikHelpers<FormItem>\r\n  ) => {\r\n    const { msg } = values;\r\n    const trimmed = msg.trim();\r\n    if (trimmed.length > 0) {\r\n      const _q = collection(db, \"messages\");\r\n\r\n      const message = {\r\n        uid: user!.uid,\r\n        displayName: user!.displayName,\r\n        photoURL: user!.photoURL,\r\n        message: trimmed,\r\n        createdAt: Timestamp.now(),\r\n      };\r\n      const docRef = await addDoc(collection(db, \"messages\"), message);\r\n    }\r\n    actions.resetForm();\r\n    // console.log(\"values\", values);\r\n    // submit to firebase\r\n  };\r\n\r\n  const handleRows = (rows: number) => {\r\n    const _rows = rows > 5 ? 5 : rows;\r\n    setRows(_rows);\r\n    if (isMobile) {\r\n      setPaddingBottom(`${_rows * 1.5 + 5.5}rem`);\r\n    }\r\n    setTimeout(() => {\r\n      isMobile\r\n        ? window.scrollTo({\r\n            top: document.body.scrollHeight,\r\n            behavior: \"smooth\",\r\n          })\r\n        : scrollRef.current.scrollTo({\r\n            top: scrollRef.current.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n    }, 50);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center chatroom-wrapper px-sm-4 pt-sm-3 pb-sm-5\">\r\n      <div className=\"chatroom shadow d-flex flex-column position-relative\">\r\n        <div className=\"room-title d-none d-sm-block border-bottom text-center py-3 shadow\">\r\n          Realtime Chat Room\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            isMobile\r\n              ? window.scrollTo({\r\n                  top: document.body.scrollHeight,\r\n                  behavior: \"smooth\",\r\n                })\r\n              : scrollRef.current.scrollTo({\r\n                  top: scrollRef.current.scrollHeight,\r\n                  behavior: \"smooth\",\r\n                });\r\n          }}\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            opacity: visible ? 1 : 0,\r\n            transform: visible ? \"translateY(0)\" : \"translateX(100%)\",\r\n          }}\r\n          className={`${\r\n            isMobile ? \"position-fixed\" : \"position-absolute\"\r\n          } scroll-to pointer bg-dark transition mb-5 mb-sm-0 shadow`}\r\n        >\r\n          <Icon svg name=\"arrow-down\" size={30} color={\"white\"} />\r\n        </div>\r\n        <div\r\n          ref={scrollRef}\r\n          onScroll={handleScroll}\r\n          className=\"room-content hideScroll pt-5 pt-sm-1\"\r\n          style={{\r\n            paddingBottom: paddingBottom,\r\n          }}\r\n        >\r\n          {messages.map((item, index) => (\r\n            <ChatItem\r\n              key={index}\r\n              name={item.displayName}\r\n              message={item.message}\r\n              self={user?.uid === item?.uid}\r\n              avatar={item.photoURL}\r\n              uid={item.uid}\r\n              createdAt={item.createdAt}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"border-top pt-3 pb-5 pb-sm-3 input-fixed\">\r\n          <Formik\r\n            initialValues={{\r\n              msg: \"\",\r\n            }}\r\n            validationSchema={Schema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ values }) => (\r\n              <Form\r\n                className=\"d-flex w-100 px-4\"\r\n                onChange={() => {\r\n                  handleRows(values.msg?.split(\"\\n\").length);\r\n                }}\r\n              >\r\n                <div className=\"col\">\r\n                  <InputField\r\n                    style={{\r\n                      backgroundColor: \"rgba(54, 57, 63, 0.8)\",\r\n                      border: \"none\",\r\n                      caretColor: \"white\",\r\n                      color: \"white\",\r\n                      resize: \"none\",\r\n                    }}\r\n                    name=\"msg\"\r\n                    placeholder=\"Input something...\"\r\n                    type=\"textarea\"\r\n                    showError={false}\r\n                    rows={rows}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    // disabled={loginLoading}\r\n                  >\r\n                    SEND\r\n                  </button>\r\n                </div>\r\n                <div className=\"mt-4 text-center\"></div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["Schema","Yup","shape","msg","required","ChatPage","isMobile","useMediaQuery","query","dispatch","useDispatch","user","useSelector","rootState","auth","useState","visible","setVisible","useEffect","setActiveRoute","_q","collection","db","orderBy","limit","messages","useFirestoreQuery","scrollRef","useRef","paddingBottom","setPaddingBottom","rows","setRows","window","scrollTo","top","document","body","scrollHeight","behavior","current","windowScroll","_","e","scrollTop","scrollY","clientHeight","innerHeight","addEventListener","removeEventListener","handleScroll","target","onSubmit","values","actions","trimmed","trim","length","message","uid","displayName","photoURL","createdAt","Timestamp","addDoc","resetForm","className","onClick","style","borderRadius","opacity","transform","svg","name","size","color","ref","onScroll","map","item","index","self","avatar","initialValues","validationSchema","onChange","_rows","setTimeout","handleRows","split","backgroundColor","border","caretColor","resize","placeholder","type","showError"],"sourceRoot":""}