{"version":3,"file":"static/js/841.532f79ba.chunk.js","mappings":"mLAiBO,SAASA,IACdC,EAAAA,WAAgB,WAEdC,EAAAA,GAAAA,eAAoBC,EAAAA,GAkDpB,OAlBAD,EAAAA,GAAAA,MAAAA,QAAmB,cAAcE,SAAQ,SAACC,IAJ7B,SAACA,GACZH,EAAAA,GAAAA,IAASG,EAAM,CAAEC,UAAW,IAI5BC,CAAKF,GAELF,EAAAA,EAAAA,OAAqB,CACnBK,MAAM,EACNC,QAASJ,EACTK,QAAS,YArCO,SAACL,EAAWM,GAC9B,IACIC,EAAI,EACNC,EAAgB,KAFAF,GAAc,GAG5BN,EAAKS,UAAUC,SAAS,uBAC1BH,GAAK,IACLC,EAAI,GACKR,EAAKS,UAAUC,SAAS,yBACjCH,EAAI,IACJC,EAAI,GAENR,EAAKW,MAAMC,UAAY,aAAeL,EAAI,OAASC,EAAI,MACvDR,EAAKW,MAAME,QAAU,IACrBhB,EAAAA,GAAAA,OACEG,EACA,CAAEO,EAAGA,EAAGC,EAAGA,EAAGP,UAAW,GACzB,CACEa,SAAU,KACVP,EAAG,EACHC,EAAG,EACHP,UAAW,EACXc,KAAM,OACNC,UAAW,SAgBXC,CAAYjB,SAWX,kBAAMH,EAAAA,GAAAA,aAAkB,iBAC9B,M,0IChEQqB,EAAW,YACtBvB,EAAAA,EAAAA,KACA,IAAMwB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAe,WACxB,CAACH,IA0BH,OACE,iBAAKI,UAAU,MAAf,WACE,gBAAKA,UAAU,gDAAf,UACE,2CAEF,iBAAKA,UAAU,+BAAf,WACE,8EACA,4DAEE,iBAAMA,UAAU,kBAAhB,0BAFF,QAIA,cACEA,UAAU,SACVZ,MAAO,CACLa,SAAU,UAHd,SAOI,0FAGJ,cAAGD,UAAU,YAAb,kGAMF,mBACA,SAAC,KAAD,CAAeA,UAAU,eAAeE,SAAS,aAAjD,SApDM,2JAwDN,gBAAKF,UAAU,kDAAf,UACE,gBACEG,MAAO,OACPC,OAAQ,OACRhB,MAAO,CACLiB,SAAU,SAEZC,IAAI,sDACJC,IAAI","sources":["app/hooks/custom.tsx","app/pages/home/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Observable } from \"rxjs\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/all\";\n\nexport function useObservable<T>(observable$: Observable<T>, initialValue: T) {\n  const [value, setValue] = React.useState(initialValue);\n\n  React.useEffect(() => {\n    const subscription = observable$.subscribe((v) => setValue(v));\n\n    return () => subscription.unsubscribe();\n  }, [observable$]);\n\n  return value;\n}\n\nexport function useAnimation() {\n  React.useEffect(() => {\n\n    gsap.registerPlugin(ScrollTrigger);\n    const animateFrom = (elem: any, _direction?: number) => {\n      const direction = _direction || 1;\n      var x = 0,\n        y = direction * 1000;\n      if (elem.classList.contains(\"gs_reveal_fromLeft\")) {\n        x = -100;\n        y = 0;\n      } else if (elem.classList.contains(\"gs_reveal_fromRight\")) {\n        x = 100;\n        y = 0;\n      }\n      elem.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n      elem.style.opacity = \"0\";\n      gsap.fromTo(\n        elem,\n        { x: x, y: y, autoAlpha: 0 },\n        {\n          duration: 1.25,\n          x: 0,\n          y: 0,\n          autoAlpha: 1,\n          ease: \"expo\",\n          overwrite: \"auto\",\n        }\n      );\n    };\n\n    const hide = (elem: any) => {\n      gsap.set(elem, { autoAlpha: 0 });\n    };\n\n    gsap.utils.toArray(\".gs_reveal\").forEach((elem: any) => {\n      hide(elem); // assure that the element is hidden when scrolled into view\n\n      ScrollTrigger.create({\n        once: true,\n        trigger: elem,\n        onEnter: () => {\n          animateFrom(elem);\n        },\n        // onEnterBack: () => {\n        //   animateFrom(elem, -1)\n        // },\n        // onLeave: () => {\n        //   hide(elem)\n        // }, // assure that the element is hidden when scrolled into view\n      });\n    });\n\n    return () => gsap.killTweensOf('.gs_reveal');\n  }, []);\n}\n","import React, { useEffect } from \"react\";\nimport \"./index.scss\";\nimport { useAnimation } from \"app/hooks/custom\";\nimport { HighlightCode } from \"app/components\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveRoute } from \"store/activeRoute\";\n\nexport const HomePage = () => {\n  useAnimation();\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setActiveRoute('home'))\n  },[dispatch])\n  \n  const code = `\n  const foo = () => { \n    const [bar, setBar] = useState<string>('foo');\n    return bar;\n\n    // the text animation makes use of gsap\n  }\n  `;\n\n  // const [maxWidth, setMaxWidth] = React.useState<number>(1000);\n  // const ref = React.useRef<any>(null);\n  // const handleResize = () => {\n  //   setMaxWidth(ref.current.offsetWidth);\n  // };\n  // React.useEffect(() => {\n  //   console.log(\"width\", ref.current ? ref.current.offsetWidth : 0);\n\n  //   if (ref.current) window.addEventListener(\"resize\", handleResize);\n\n  //   return () => {\n  //     window.removeEventListener(\"resize\", handleResize);\n  //   };\n  // }, [ref]);\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"page-header mb-2 gs_reveal gs_reveal_fromLeft\">\n        <strong>Welcome</strong>\n      </div>\n      <div className=\"gs_reveal gs_reveal_fromLeft\">\n        <p>This page is a personal page host in Github Page.</p>\n        <p>\n          Made with react, simply use for\n          <span className=\"ms-1 high-light\">demo purpose</span>.\n        </p>\n        <p\n          className=\"remark\"\n          style={{\n            fontSize: \"0.8rem\",\n          }}\n        >\n          {\n            \"( Perhaps there maybe further development or features in the future. No one knows. )\"\n          }\n        </p>\n        <p className=\"opactiy-5\">\n          If you are using mobile device, please click the menu icon to toggle\n          nav sidebar\n        </p>\n      </div>\n\n      <hr />\n      <HighlightCode className=\"code-snippet\" language=\"typescript\">\n        {code}\n      </HighlightCode>\n\n      <div className=\"d-flex justify-content-center position-relative\">\n        <img\n          width={\"100%\"}\n          height={\"auto\"}\n          style={{\n            maxWidth: \"500px\",\n          }}\n          src=\"https://c.tenor.com/a5MVWtIRNFUAAAAC/genba-neko.gif\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  );\n};\n\n// const styles = {\n//   header: {\n//     fontSize: \"3em\",\n//   },\n// };\n"],"names":["useAnimation","React","gsap","ScrollTrigger","forEach","elem","autoAlpha","hide","once","trigger","onEnter","_direction","x","y","classList","contains","style","transform","opacity","duration","ease","overwrite","animateFrom","HomePage","dispatch","useDispatch","useEffect","setActiveRoute","className","fontSize","language","width","height","maxWidth","src","alt"],"sourceRoot":""}