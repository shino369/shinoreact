{"version":3,"file":"static/js/270.a05b106c.chunk.js","mappings":"ySAuBaA,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,IADiBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAA0BA,EAAUC,QAAzDC,MACgBC,EAAAA,EAAAA,UAAgB,KAAxC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAgB,IAAhD,eACA,GADA,WACgCA,EAAAA,EAAAA,UAAiB,kBAAjD,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,IAAe,YACvB,CAACZ,IAyBJ,IAAMa,GAAWC,EAAAA,EAAAA,cAAW,uBAAC,kGACvBC,EAAe,GACbC,GAAIC,EAAAA,EAAAA,KACRC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UACfC,EAAAA,EAAAA,IAAM,WAAY,KAAb,UAAsBX,KAJF,UAMCY,EAAAA,EAAAA,IAAQL,GANT,cAObM,QAAd,yCAAsB,WAAOC,GAAP,mFAEdC,GAAgBP,EAAAA,EAAAA,KACpBC,EAAAA,EAAAA,IAAWK,EAAIE,IAAK,UACpBC,EAAAA,EAAAA,IAAQ,YAAa,SACrBC,EAAAA,EAAAA,IAAM,KALY,UAOgBN,EAAAA,EAAAA,IAAQG,GAPxB,cAQEF,SAAQ,SAACM,GAG7Bb,EAAMc,MAAN,gBACEC,GAAIF,EAAOE,IACRF,EAAOrB,QAFZ,IAGEwB,UAAWC,IAAOJ,EAAOrB,OAAOwB,UAAUE,UAAUC,OAClD,uBAEFC,UAAWH,IAAOJ,EAAOrB,OAAO4B,UAAUF,UAAUC,OAClD,6BAIN1B,EAAQO,GAtBY,2CAAtB,uDAP2B,2CAgC1B,CAACN,IAMJ,OAJAE,EAAAA,EAAAA,YAAU,WACRE,MACC,CAACA,KAGF,iBAAKuB,UAAU,mEAAf,WACE,oCAQA,iBAAKA,UAAU,aAAf,WACE,mBACEA,UAAU,OACVC,MAAO5B,EACP6B,SAAU,SAACC,GACT7B,EAAY6B,EAAEC,OAAOH,QAJzB,UAOE,mBAAQA,MAAM,gBAAd,8BAEF,gBAAKD,UAAU,uBAAf,UACE,UAAC,KAAD,CAAOK,YAAU,EAACC,OAAK,EAAvB,WACE,4BACE,2BACE,kCACA,kCACA,8CAGJ,2BACGnC,EAAKoC,KAAI,SAACC,GAAD,OACR,2BACE,wBAAKA,EAAKC,UACV,wBAAKD,EAAKE,SACV,wBAAKF,EAAKb,cAHHa,EAAKd,kBAkBxB,SAAC,KAAD,CAAMiB,GAAG,IAAT","sources":["app/pages/detail/index.tsx"],"sourcesContent":["// import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setActiveRoute } from \"store/activeRoute\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"app/hooks/firebase\";\r\nimport { RootState } from \"store\";\r\nimport moment from \"moment\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nexport const DetailPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((rootState: RootState) => rootState.auth);\r\n  const [data, setData] = useState<any[]>([]);\r\n  const [messages, setMessages] = useState<any[]>([]);\r\n  const [category, setCategory] = useState<string>(\"entertainment\");\r\n\r\n  useEffect(() => {\r\n    dispatch(setActiveRoute(\"posts\"));\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   const _q = query(collection(db, \"messages\"));\r\n  //   const unsubscribe = onSnapshot(_q, (snapshot) => {\r\n  //     snapshot.docChanges().forEach((change) => {\r\n  //       if (change.type === \"added\") {\r\n  //         console.log(\"New: \", change.doc.data());\r\n  //       }\r\n  //       if (change.type === \"modified\") {\r\n  //         console.log(\"Modified: \", change.doc.data());\r\n  //       }\r\n  //       if (change.type === \"removed\") {\r\n  //         console.log(\"Removed: \", change.doc.data());\r\n  //       }\r\n  //       const msg = change.doc.data();\r\n  //       setMessages((prev) => [...prev, msg]);\r\n  //     });\r\n  //   });\r\n\r\n  //   return () => {\r\n  //     unsubscribe();\r\n  //   };\r\n  // }, []);\r\n\r\n  const getFeeds = useCallback(async () => {\r\n    let _data: any[] = [];\r\n    const q = query(\r\n      collection(db, \"feeds\"),\r\n      where(\"category\", \"==\", `${category}`)\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach(async (doc) => {\r\n      // get subcollection\r\n      const subcollection = query(\r\n        collection(doc.ref, \"posts\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        limit(20)\r\n      );\r\n      const subcollectionSnapshot = await getDocs(subcollection);\r\n      subcollectionSnapshot.forEach((subdoc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        // console.log(subdoc.id, \" => \", subdoc.data());\r\n        _data.push({\r\n          id: subdoc.id,\r\n          ...subdoc.data(),\r\n          updatedAt: moment(subdoc.data().updatedAt.toDate()).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          ),\r\n          createdAt: moment(subdoc.data().createdAt.toDate()).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          ),\r\n        });\r\n      });\r\n      setData(_data);\r\n      // console.log(_data);\r\n    });\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    getFeeds();\r\n  }, [getFeeds]);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center p-4\">\r\n      <div>Posts</div>\r\n      {/* <button\r\n        onClick={() => {\r\n          getFeeds();\r\n        }}\r\n      >\r\n        test\r\n      </button> */}\r\n      <div className=\"w-100 px-4\">\r\n        <select\r\n          className=\"mb-2\"\r\n          value={category}\r\n          onChange={(e) => {\r\n            setCategory(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"entertainment\">entertainment</option>\r\n        </select>\r\n        <div className=\"w-100 border rounded\">\r\n          <Table borderless hover>\r\n            <thead>\r\n              <tr>\r\n                <th>user</th>\r\n                <th>post</th>\r\n                <th>last update</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item) => (\r\n                <tr key={item.id}>\r\n                  <td>{item.author}</td>\r\n                  <td>{item.title}</td>\r\n                  <td>{item.updatedAt}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        {/* <div>\r\n          {messages.map((item, index) => (\r\n            <div key={index}>\r\n              {item.name}:{item.message}\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n\r\n      <Link to=\"/\">go back to home</Link>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["DetailPage","dispatch","useDispatch","useSelector","rootState","auth","user","useState","data","setData","category","setCategory","useEffect","setActiveRoute","getFeeds","useCallback","_data","q","query","collection","db","where","getDocs","forEach","doc","subcollection","ref","orderBy","limit","subdoc","push","id","updatedAt","moment","toDate","format","createdAt","className","value","onChange","e","target","borderless","hover","map","item","author","title","to"],"sourceRoot":""}