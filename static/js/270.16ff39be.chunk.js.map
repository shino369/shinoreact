{"version":3,"file":"static/js/270.16ff39be.chunk.js","mappings":"sTAuBaA,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,IADiBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAA0BA,EAAUC,QAAzDC,MACgBC,EAAAA,EAAAA,UAAgB,KAAxC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAgB,IAAhD,eACA,GADA,WACgCA,EAAAA,EAAAA,UAAiB,kBAAjD,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,IAAe,YACvB,CAACZ,IAyBJ,IAAMa,GAAWC,EAAAA,EAAAA,cAAW,uBAAC,kGACvBC,EAAe,GACbC,GAAIC,EAAAA,EAAAA,KACRC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UACfC,EAAAA,EAAAA,IAAM,WAAY,KAAb,UAAsBX,KAJF,UAMCY,EAAAA,EAAAA,IAAQL,GANT,cAObM,QAAd,yCAAsB,WAAOC,GAAP,mFAEdC,GAAgBP,EAAAA,EAAAA,KACpBC,EAAAA,EAAAA,IAAWK,EAAIE,IAAK,UACpBC,EAAAA,EAAAA,IAAQ,YAAa,SACrBC,EAAAA,EAAAA,IAAM,KALY,UAOgBN,EAAAA,EAAAA,IAAQG,GAPxB,cAQEF,SAAQ,SAACM,GAG7Bb,EAAMc,MAAN,gBACEC,GAAIF,EAAOE,IACRF,EAAOrB,QAFZ,IAGEwB,UAAWC,IAAOJ,EAAOrB,OAAOwB,UAAUE,UAAUC,OAClD,uBAEFC,UAAWH,IAAOJ,EAAOrB,OAAO4B,UAAUF,UAAUC,OAClD,6BAIN1B,EAAQO,GAtBY,2CAAtB,uDAP2B,2CAgC1B,CAACN,IAMJ,OAJAE,EAAAA,EAAAA,YAAU,WACRE,MACC,CAACA,KAGF,iBAAKuB,UAAU,mEAAf,WACE,oCAQA,iBAAKA,UAAU,aAAf,WACE,mBACEA,UAAU,OACVC,MAAO5B,EACP6B,SAAU,SAACC,GACT7B,EAAY6B,EAAEC,OAAOH,QAJzB,UAOE,mBAAQA,MAAM,gBAAd,8BAEF,gBAAKD,UAAU,uBAAf,UACE,UAAC,KAAD,CAAOK,YAAU,EAACC,OAAK,EAAvB,WACE,4BACE,2BACE,kCACA,kCACA,8CAGJ,2BACGnC,EAAKoC,KAAI,SAACC,GAAD,OACR,2BACE,wBAAKA,EAAKC,UACV,wBAAKD,EAAKE,SACV,wBAAKF,EAAKb,cAHHa,EAAKd,kBAkBxB,SAAC,KAAD,CAAMiB,GAAG,IAAT","sources":["app/pages/detail/index.tsx"],"sourcesContent":["// import { useCallback, useEffect, useState } from 'react';\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setActiveRoute } from \"store/activeRoute\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  onSnapshot,\n  orderBy,\n  query,\n  Timestamp,\n  where,\n} from \"firebase/firestore\";\nimport { db } from \"app/hooks/firebase\";\nimport { RootState } from \"store\";\nimport moment from \"moment\";\nimport { Table } from \"reactstrap\";\n\nexport const DetailPage = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((rootState: RootState) => rootState.auth);\n  const [data, setData] = useState<any[]>([]);\n  const [messages, setMessages] = useState<any[]>([]);\n  const [category, setCategory] = useState<string>(\"entertainment\");\n\n  useEffect(() => {\n    dispatch(setActiveRoute(\"posts\"));\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   const _q = query(collection(db, \"messages\"));\n  //   const unsubscribe = onSnapshot(_q, (snapshot) => {\n  //     snapshot.docChanges().forEach((change) => {\n  //       if (change.type === \"added\") {\n  //         console.log(\"New: \", change.doc.data());\n  //       }\n  //       if (change.type === \"modified\") {\n  //         console.log(\"Modified: \", change.doc.data());\n  //       }\n  //       if (change.type === \"removed\") {\n  //         console.log(\"Removed: \", change.doc.data());\n  //       }\n  //       const msg = change.doc.data();\n  //       setMessages((prev) => [...prev, msg]);\n  //     });\n  //   });\n\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // }, []);\n\n  const getFeeds = useCallback(async () => {\n    let _data: any[] = [];\n    const q = query(\n      collection(db, \"feeds\"),\n      where(\"category\", \"==\", `${category}`)\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(async (doc) => {\n      // get subcollection\n      const subcollection = query(\n        collection(doc.ref, \"posts\"),\n        orderBy(\"createdAt\", \"desc\"),\n        limit(20)\n      );\n      const subcollectionSnapshot = await getDocs(subcollection);\n      subcollectionSnapshot.forEach((subdoc) => {\n        // doc.data() is never undefined for query doc snapshots\n        // console.log(subdoc.id, \" => \", subdoc.data());\n        _data.push({\n          id: subdoc.id,\n          ...subdoc.data(),\n          updatedAt: moment(subdoc.data().updatedAt.toDate()).format(\n            \"YYYY-MM-DD HH:mm:ss\"\n          ),\n          createdAt: moment(subdoc.data().createdAt.toDate()).format(\n            \"YYYY-MM-DD HH:mm:ss\"\n          ),\n        });\n      });\n      setData(_data);\n      // console.log(_data);\n    });\n  }, [category]);\n\n  useEffect(() => {\n    getFeeds();\n  }, [getFeeds]);\n\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center p-4\">\n      <div>Posts</div>\n      {/* <button\n        onClick={() => {\n          getFeeds();\n        }}\n      >\n        test\n      </button> */}\n      <div className=\"w-100 px-4\">\n        <select\n          className=\"mb-2\"\n          value={category}\n          onChange={(e) => {\n            setCategory(e.target.value);\n          }}\n        >\n          <option value=\"entertainment\">entertainment</option>\n        </select>\n        <div className=\"w-100 border rounded\">\n          <Table borderless hover>\n            <thead>\n              <tr>\n                <th>user</th>\n                <th>post</th>\n                <th>last update</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item) => (\n                <tr key={item.id}>\n                  <td>{item.author}</td>\n                  <td>{item.title}</td>\n                  <td>{item.updatedAt}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        {/* <div>\n          {messages.map((item, index) => (\n            <div key={index}>\n              {item.name}:{item.message}\n            </div>\n          ))}\n        </div> */}\n      </div>\n\n      <Link to=\"/\">go back to home</Link>\n    </div>\n  );\n};\n"],"names":["DetailPage","dispatch","useDispatch","useSelector","rootState","auth","user","useState","data","setData","category","setCategory","useEffect","setActiveRoute","getFeeds","useCallback","_data","q","query","collection","db","where","getDocs","forEach","doc","subcollection","ref","orderBy","limit","subdoc","push","id","updatedAt","moment","toDate","format","createdAt","className","value","onChange","e","target","borderless","hover","map","item","author","title","to"],"sourceRoot":""}