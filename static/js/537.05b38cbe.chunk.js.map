{"version":3,"file":"static/js/537.05b38cbe.chunk.js","mappings":"sRAWMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,SAAUF,EAAAA,KAAaG,SAAS,YAChCC,SAAUJ,EAAAA,KAAaG,SAAS,cAGrBE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,OAEnBC,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,IAAe,YACvB,CAACL,IAEJ,IAAMM,EAAQ,yCAAG,WAAOC,EAAaC,GAApB,sEAEf,IAKEN,EAAW,WACX,MAAOO,IARM,2CAAH,wDAcd,OACE,iBAAKC,UAAU,mEAAf,WACE,cACEA,UAAU,SACVC,MAAO,CACLC,SAAU,UAHd,SAMG,6BAEH,SAAC,KAAD,CAAKF,UAAU,GAAf,UACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMA,UAAU,yBAAhB,WACA,gBAAKA,UAAU,mBAAmBC,MAAO,CAACE,OAAO,WAC/C,SAAC,KAAD,CAAUH,UAAU,YAApB,UAEE,SAAC,KAAD,CACEI,cAAe,CACbC,UAAW,GACXjB,SAAU,IAEZkB,iBAAkBvB,EAClBa,SAAUA,EANZ,SAQG,kBACC,UAAC,KAAD,CAAMI,UAAU,kBAAhB,WAIE,gBAAKA,UAAU,OAAf,UACE,SAAC,KAAD,CACEO,KAAK,WACLC,MAAM,WACNC,YAAY,WACZC,KAAK,YAGT,gBAAKV,UAAU,OAAf,UACE,SAAC,KAAD,CACEO,KAAK,WACLC,MAAM,WACNC,YAAY,WACZC,KAAK,gBAGT,gBAAKV,UAAU,cAAf,UACE,mBACEA,UAAU,4BACVU,KAAK,SAFP,sBAaF,gBAAKV,UAAU,qCAS7B,SAAC,KAAD,CAAMW,GAAG,IAAT","sources":["app/pages/login/index.tsx"],"sourcesContent":["// import { useCallback, useEffect, useState } from 'react';\n\nimport { Form, Formik } from \"formik\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { setActiveRoute } from \"store/activeRoute\";\nimport { Alert, Card, CardBody, Col, Container, Row } from \"reactstrap\";\nimport { InputField } from \"app/components\";\nimport * as Yup from \"yup\";\n\nconst Schema = Yup.object().shape({\n  username: Yup.string().required(\"required\"),\n  password: Yup.string().required(\"required\"),\n});\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    dispatch(setActiveRoute(\"login\"));\n  }, [dispatch]);\n\n  const onSubmit = async (values: any, action: any) => {\n    // dispatch(loginStart());\n    try {\n      // await login(values);\n      // const user = await getUser();\n      // dispatch(setUser(user));\n      // dispatch(loginSuccess());\n      navigation(\"/detail\");\n    } catch (err) {\n      // console.error(err);\n      // dispatch(loginFail('Incorrect username or password'));\n    }\n  };\n\n  return (\n    <div className=\"p-4 d-flex flex-column justify-content-center align-items-center\">\n      <p\n        className=\"remark\"\n        style={{\n          fontSize: \"0.8rem\",\n        }}\n      >\n        {\"( Not implemented yet )\"}\n      </p>\n      <Row className=\"\">\n        <Col>\n          <Card className=\"shadow overflow-hidden\">\n          <div className=\"bg-primary w-100\" style={{height:'2rem'}}></div>\n            <CardBody className=\"mx-4 mb-4\">\n              \n              <Formik\n                initialValues={{\n                  loginName: \"\",\n                  password: \"\",\n                }}\n                validationSchema={Schema}\n                onSubmit={onSubmit}\n              >\n                {() => (\n                  <Form className=\"form-horizontal\">\n                    {/* {loginError && typeof loginError === 'string' ? (\n                            <Alert color=\"danger\">{loginError}</Alert>\n                          ) : null} */}\n                    <div className=\"mb-3\">\n                      <InputField\n                        name=\"username\"\n                        label=\"username\"\n                        placeholder=\"username\"\n                        type=\"text\"\n                      />\n                    </div>\n                    <div className=\"mb-3\">\n                      <InputField\n                        name=\"password\"\n                        label=\"password\"\n                        placeholder=\"password\"\n                        type=\"password\"\n                      />\n                    </div>\n                    <div className=\"mt-3 d-grid\">\n                      <button\n                        className=\"btn btn-primary btn-block\"\n                        type=\"submit\"\n                        // disabled={loginLoading}\n                      >\n                        Login\n                        {/* {loginLoading ? (\n                                <i className=\"bx bx-loader-circle bx-spin\" />\n                              ) : (\n                                '登入'\n                              )} */}\n                      </button>\n                    </div>\n                    <div className=\"mt-4 text-center\"></div>\n                  </Form>\n                )}\n              </Formik>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Link to=\"/\">go back to home</Link>\n    </div>\n  );\n};\n"],"names":["Schema","Yup","shape","username","required","password","LoginPage","dispatch","useDispatch","navigation","useNavigate","useEffect","setActiveRoute","onSubmit","values","action","err","className","style","fontSize","height","initialValues","loginName","validationSchema","name","label","placeholder","type","to"],"sourceRoot":""}