{"version":3,"file":"static/js/316.28cf9209.chunk.js","mappings":"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","sources":["app/pages/chat/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setActiveRoute } from \"store/activeRoute\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport ImageUploading, { ImageListType } from \"react-images-uploading\";\r\n\r\n// react suite\r\nimport ReadyRoundIcon from \"@rsuite/icons/ReadyRound\";\r\nimport PeoplesIcon from \"@rsuite/icons/Peoples\";\r\nimport PlusRoundIcon from \"@rsuite/icons/PlusRound\";\r\nimport SearchIcon from \"@rsuite/icons/Search\";\r\nimport CopyIcon from \"@rsuite/icons/Copy\";\r\nimport ArrowRightLineIcon from \"@rsuite/icons/ArrowRightLine\";\r\nimport ExitIcon from \"@rsuite/icons/Exit\";\r\nimport FileUploadIcon from \"@rsuite/icons/FileUpload\";\r\nimport WarningRoundIcon from \"@rsuite/icons/WarningRound\";\r\n\r\n// form\r\nimport { Input, Table } from \"reactstrap\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// firebase\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  updateDoc,\r\n  deleteDoc,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\nimport { db } from \"app/hooks/firebase\";\r\n\r\n// library\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\n// hook\r\nimport { useFirestoreQuery } from \"app/hooks/commonHook\";\r\n\r\n// style\r\nimport \"./index.scss\";\r\n\r\n// component\r\nimport { ChatItem, Icon, InputField } from \"app/components\";\r\nimport ConfimrDialog from \"app/components/dialog/confirmDialog\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Schema = Yup.object().shape({\r\n  msg: Yup.string(),\r\n});\r\n\r\ntype FormItem = {\r\n  msg: string;\r\n};\r\n\r\nconst ICON_COLOR = \"#fff\";\r\nconst CHAT_TOP_HEIGHT = \"3.5rem\";\r\nconst ICON_SIZE = 15;\r\n\r\ninterface PendingAction {\r\n  action: string;\r\n  id: string;\r\n}\r\n\r\ninterface Room {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface ModalAction {\r\n  action: string;\r\n  isOpen: boolean;\r\n}\r\n\r\nexport const ChatPage = () => {\r\n  const { user } = useSelector((rootState: RootState) => rootState.auth);\r\n  const dispatch = useDispatch();\r\n  const isMobile = useMediaQuery({ query: `(max-width: 576px)` });\r\n  const [newMessage, setNewMessage] = useState<any[]>([]);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [pendingAction, setPendingAction] = useState<PendingAction>();\r\n  const [showRooms, setShowRooms] = useState<boolean>(!isMobile);\r\n  const [activeRoom, setActiveRoom] = useState<Room>({\r\n    id: \"public\",\r\n    name: \"public\",\r\n  });\r\n  const [activeMembers, setActiveMembers] = useState<any[]>([]);\r\n  const [rooms, setRooms] = useState<any[]>([]);\r\n  const [modalAction, setModalAction] = useState<ModalAction>({\r\n    action: \"\",\r\n    isOpen: false,\r\n  });\r\n\r\n  const [paddingBottom, setPaddingBottom] = useState<string>(\r\n    isMobile ? \"7rem\" : \"8rem\"\r\n  );\r\n  const [rows, setRows] = useState<number>(1);\r\n\r\n  const [querying, setQuerying] = useState<any>(\r\n    query(collection(db, \"messages\"), orderBy(\"createdAt\"), limit(100))\r\n  );\r\n\r\n  const [images, setImages] = useState<any>([]);\r\n\r\n  const onImageChange = (\r\n    imageList: ImageListType,\r\n    addUpdateIndex: number[] | undefined\r\n  ) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    setImages(imageList as never[]);\r\n  };\r\n\r\n  const headerRef = useRef<any>(null);\r\n  const scrollRef = useRef<any>(null);\r\n\r\n  const storage = getStorage();\r\n\r\n  // change query when activeRoom change\r\n  useEffect(() => {\r\n    if (activeRoom.id === \"public\") {\r\n      setQuerying(\r\n        query(collection(db, \"messages\"), orderBy(\"createdAt\"), limit(100))\r\n      );\r\n    } else {\r\n      setQuerying(\r\n        query(\r\n          collection(db, \"rooms\", activeRoom.id, \"messages\"),\r\n          orderBy(\"createdAt\"),\r\n          limit(100)\r\n        )\r\n      );\r\n    }\r\n  }, [activeRoom]);\r\n\r\n  const messages = useFirestoreQuery(querying);\r\n\r\n  // get rooms list and set active user\r\n  const getTotalRooms = useCallback(\r\n    async (msgs: any) => {\r\n      const roomQ = query(\r\n        collection(db, \"rooms\"),\r\n        where(\"members\", \"array-contains\", user!.uid)\r\n      );\r\n      const querySnapshotRoom = await getDocs(roomQ);\r\n      let roomTotal: any = [];\r\n      querySnapshotRoom.forEach((doc) => {\r\n        roomTotal.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      if (activeRoom.id !== \"public\") {\r\n        const roomDetail = roomTotal.find(\r\n          (room: any) => room.id === activeRoom.id\r\n        );\r\n        const userQ = query(\r\n          collection(db, \"users\"),\r\n          where(\"uid\", \"in\", roomDetail.members)\r\n        );\r\n        const querySnapshotUser = await getDocs(userQ);\r\n        let members: any = [];\r\n        querySnapshotUser.forEach((doc) => {\r\n          members.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setActiveMembers(members);\r\n        console.log(members);\r\n      } else if (activeRoom.id === \"public\") {\r\n        // remove duplicate from message by uid\r\n        const unique = _.uniqBy(msgs, \"uid\").map((f: any) => ({\r\n          photoURL: f.photoURL,\r\n          displayName: f.displayName,\r\n          uid: f.uid,\r\n        }));\r\n        setActiveMembers(unique);\r\n      }\r\n\r\n      setRooms(roomTotal);\r\n      console.log(\"triggered\");\r\n    },\r\n    [activeRoom]\r\n  );\r\n\r\n  // scroll to bottom when new message come\r\n  useEffect(() => {\r\n    isMobile\r\n      ? window.scrollTo({\r\n          top: document.body.scrollHeight,\r\n          behavior: \"smooth\",\r\n        })\r\n      : scrollRef.current.scrollTo({\r\n          top: scrollRef.current.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n\r\n    getTotalRooms(messages);\r\n  }, [messages, getTotalRooms]);\r\n\r\n  /*\r\n  fake data to prevent heavy read of firestore in testing\r\n  [\r\n    {\r\n      displayName: \"test\",\r\n      id: \"gkjshgkjsnh\",\r\n      photoURL: \"\",\r\n      createdAt: \"\",\r\n      uid: \"safsgsakfasj\",\r\n      message: \"safakgalgalj\",\r\n    },\r\n  ]; \r\n  */\r\n\r\n  useEffect(() => {\r\n    dispatch(setActiveRoute(\"chat\"));\r\n  }, [dispatch]);\r\n\r\n  // scroll to bottom button effect (body in mobile)\r\n  useEffect(() => {\r\n    const windowScroll = _.debounce((e) => {\r\n      if (isMobile) {\r\n        const scrollTop = window.scrollY;\r\n        const scrollHeight = document.body.scrollHeight;\r\n        const clientHeight = window.innerHeight;\r\n        if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n          setVisible(true);\r\n        } else {\r\n          setVisible(false);\r\n        }\r\n      }\r\n    }, 100);\r\n\r\n    window.addEventListener(\"scroll\", windowScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", windowScroll);\r\n    };\r\n  }, []);\r\n\r\n  // scroll to bottom button effect (container in breakpoint > sm)\r\n  const handleScroll = _.debounce((e) => {\r\n    if (!isMobile) {\r\n      const scrollTop = e.target.scrollTop;\r\n      const scrollHeight = e.target.scrollHeight;\r\n      const clientHeight = e.target.clientHeight;\r\n      // console.log(scrollTop + clientHeight, scrollHeight);\r\n      if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n        setVisible(true);\r\n      } else {\r\n        setVisible(false);\r\n      }\r\n    }\r\n  }, 100);\r\n\r\n  // add new room\r\n  const handleAddNewRoom = useCallback(\r\n    async (room: any) => {\r\n      const newRoom = await addDoc(collection(db, \"rooms\"), {\r\n        name: room,\r\n        members: [user!.uid],\r\n      });\r\n      // add subcollection messages to newRoom\r\n      await addDoc(collection(db, \"rooms\", newRoom.id, \"messages\"), {\r\n        uid: user!.uid,\r\n        displayName: user!.displayName,\r\n        photoURL: user!.photoURL,\r\n        message: \"Welcome to the room\",\r\n        createdAt: Timestamp.now(),\r\n      });\r\n\r\n      setModalAction({ action: \"\", isOpen: false });\r\n      setActiveRoom({ id: newRoom.id, name: room });\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const handleJoinRoom = useCallback(\r\n    async (room: any) => {\r\n      const roomRef = doc(db, \"rooms\", room);\r\n      const roomData = await getDoc(roomRef);\r\n      if (roomData.exists()) {\r\n        const members = roomData.data().members;\r\n        if (members.includes(user!.uid)) {\r\n          setActiveRoom({ id: roomData.id, name: roomData.data().name });\r\n          setModalAction({ action: \"\", isOpen: false });\r\n        } else {\r\n          // add user into members\r\n          await updateDoc(roomRef, {\r\n            members: [...members, user!.uid],\r\n          });\r\n          setActiveRoom({ id: roomData.id, name: roomData.data().name });\r\n          setModalAction({ action: \"\", isOpen: false });\r\n        }\r\n      } else {\r\n        toast(\"ERROR 404: Room not found\", {\r\n          theme: \"colored\",\r\n          position: isMobile ? \"top-center\" : \"top-right\",\r\n          className: \"opacity-toast text-white\",\r\n        });\r\n      }\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const handleLeaveRoom = useCallback(async () => {\r\n    if (activeRoom.id !== \"public\") {\r\n      const roomRef = doc(db, \"rooms\", activeRoom.id);\r\n      const newMemberList = activeMembers.filter(\r\n        (mem) => mem.uid !== user!.uid\r\n      );\r\n      await updateDoc(roomRef, { members: newMemberList });\r\n    }\r\n    setActiveRoom({ id: \"public\", name: \"Public\" });\r\n    setModalAction({ action: \"\", isOpen: false });\r\n  }, [activeMembers]);\r\n\r\n  // handle form submit new message\r\n  const onSubmit = async (\r\n    values: FormItem,\r\n    actions: FormikHelpers<FormItem>\r\n  ) => {\r\n    // handle image\r\n    const imageURL: string[] = [];\r\n    if (images.length > 0) {\r\n      const load = toast.loading(`Uploading image...`, {\r\n        theme: \"colored\",\r\n        position: \"top-right\",\r\n        className: \"opacity-toast text-white\",\r\n      });\r\n      for (let i = 0; i < images.length; i++) {\r\n        const metadata = {\r\n          contentType: images[i].file.type,\r\n        };\r\n        const storageRef = ref(storage, \"images/\" + images[i].file.name);\r\n        const uploadTask = uploadBytesResumable(storageRef, images[i].file);\r\n\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            const progress =\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log(\"Upload is \" + progress + \"% done\");\r\n            switch (snapshot.state) {\r\n              case \"paused\":\r\n                console.log(\"Upload is paused\");\r\n                break;\r\n              case \"running\":\r\n                console.log(\"Upload is running\");\r\n                break;\r\n            }\r\n          },\r\n          (error) => {\r\n            switch (error.code) {\r\n              case \"storage/unauthorized\":\r\n                console.log(\"User doesnt have permission to access the object\");\r\n                break;\r\n              case \"storage/canceled\":\r\n                console.log(\"User canceled the upload\");\r\n                break;\r\n              case \"storage/unknown\":\r\n                console.log(\"Unknown error occurred\");\r\n                break;\r\n            }\r\n          },\r\n          async () => {\r\n            // Upload completed successfully, now we can get the download URL\r\n            await getDownloadURL(uploadTask.snapshot.ref).then(\r\n              async (downloadURL) => {\r\n                console.log(\"File available at\", downloadURL);\r\n                imageURL.push(downloadURL);\r\n\r\n                if (imageURL.length === images.length) {\r\n                  console.log(\"all uploads done\");\r\n                  console.log(imageURL);\r\n                  // handle text message\r\n                  const { msg } = values;\r\n                  const trimmed = msg?.trim();\r\n\r\n                  const _q =\r\n                    activeRoom.id === \"public\"\r\n                      ? collection(db, \"messages\")\r\n                      : collection(db, \"rooms\", activeRoom.id, \"messages\");\r\n\r\n                  const message = {\r\n                    uid: user!.uid,\r\n                    displayName: user!.displayName,\r\n                    photoURL: user!.photoURL,\r\n                    message: trimmed || \"\",\r\n                    imageURL: imageURL,\r\n                    createdAt: Timestamp.now(),\r\n                  };\r\n\r\n                  const docRef = await addDoc(_q, message);\r\n\r\n                  actions.resetForm();\r\n                  setImages([]);\r\n                  toast.update(load, {render: 'Images Uploaded successfully', type: 'default', className: 'opacity-toast text-white', autoClose: 2000, isLoading: false}); \r\n                }\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      const { msg } = values;\r\n      const trimmed = msg.trim();\r\n      if (trimmed.length > 0) {\r\n        const _q =\r\n          activeRoom.id === \"public\"\r\n            ? collection(db, \"messages\")\r\n            : collection(db, \"rooms\", activeRoom.id, \"messages\");\r\n\r\n        const message = {\r\n          uid: user!.uid,\r\n          displayName: user!.displayName,\r\n          photoURL: user!.photoURL,\r\n          message: trimmed,\r\n          imageURL: imageURL,\r\n          createdAt: Timestamp.now(),\r\n        };\r\n\r\n        const docRef = await addDoc(_q, message);\r\n      }\r\n      actions.resetForm();\r\n      setImages([]);\r\n    }\r\n\r\n    // console.log(\"values\", values);\r\n    // submit to firebase\r\n  };\r\n\r\n  // auto grow textarea\r\n  const handleRows = (rows: number) => {\r\n    const _rows = rows > 5 ? 5 : rows;\r\n    setRows(_rows);\r\n    isMobile\r\n      ? setPaddingBottom(`${_rows * 1.5 + 5.5}rem`)\r\n      : setPaddingBottom(`${_rows * 1.5 + 6.5}rem`);\r\n\r\n    setTimeout(() => {\r\n      isMobile\r\n        ? window.scrollTo({\r\n            top: document.body.scrollHeight,\r\n            behavior: \"smooth\",\r\n          })\r\n        : scrollRef.current.scrollTo({\r\n            top: scrollRef.current.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n    }, 50);\r\n  };\r\n\r\n  // delete message\r\n  const deleteChatItem = useCallback(\r\n    async (id: string) => {\r\n      if (activeRoom.id === \"public\") {\r\n        const res = await deleteDoc(doc(db, \"messages\", id));\r\n      } else {\r\n        const res = await deleteDoc(\r\n          doc(db, \"rooms\", activeRoom.id, \"messages\", id)\r\n        );\r\n      }\r\n\r\n      // console.log(res);\r\n    },\r\n    [activeRoom]\r\n  );\r\n\r\n  // after confirm dialog\r\n  const handleOptions = () => {\r\n    if (pendingAction && pendingAction.action === \"DELETE\") {\r\n      deleteChatItem(pendingAction.id);\r\n    }\r\n    setPendingAction(undefined);\r\n    setModalAction({ action: \"\", isOpen: false });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center chatroom-wrapper px-sm-4 pt-sm-3 pb-sm-5\">\r\n      <div\r\n        className={`${\r\n          isMobile ? \"d-none\" : \"\"\r\n        } start-0 h-100 d-flex align-items-start justify-content-start bg-room overflow-hidden`}\r\n        style={{maxWidth: '12.5rem'}}\r\n      >\r\n        <div\r\n          className={`p-0 d-flex flex-column h-100 justify-content-start position-relative`}\r\n        >\r\n          <div\r\n            className=\"d-flex align-items-center\"\r\n            style={{\r\n              minHeight: CHAT_TOP_HEIGHT,\r\n            }}\r\n          >\r\n            <div\r\n              onClick={() => {\r\n                setModalAction({ action: \"add\", isOpen: true });\r\n              }}\r\n              className={`${\r\n                !showRooms ? \"d-none\" : \"\"\r\n              } btn ms-1 bg-dark mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n              style={{\r\n                borderRadius: \"50%\",\r\n                width: 30,\r\n                height: 30,\r\n                zIndex: 20,\r\n              }}\r\n            >\r\n              <PlusRoundIcon\r\n                width={ICON_SIZE}\r\n                height={ICON_SIZE}\r\n                fill={ICON_COLOR}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                setModalAction({ action: \"join\", isOpen: true });\r\n              }}\r\n              className={`${\r\n                !showRooms ? \"d-none\" : \"\"\r\n              } btn ms-1 bg-dark mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n              style={{\r\n                borderRadius: \"50%\",\r\n                width: 30,\r\n                height: 30,\r\n                zIndex: 20,\r\n              }}\r\n            >\r\n              <SearchIcon\r\n                width={ICON_SIZE}\r\n                height={ICON_SIZE}\r\n                fill={ICON_COLOR}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"transition me-1 overflow-auto border-bottom-chat\"\r\n            style={{\r\n              // transform: showRooms ? \"translateX(0)\" : \"translateX(-12rem)\",\r\n              width: \"12rem\",\r\n              fontSize: \"0.75rem\",\r\n              height: \"calc(50% - 3.5rem)\",\r\n              left: \"0px\",\r\n              zIndex: 10,\r\n            }}\r\n          >\r\n            {[{ name: \"public\", id: \"public\" }, ...rooms].map((item, index) => (\r\n              <div key={index} className=\"mb-1 text-white p-0 text-start w-100\">\r\n                <div\r\n                  onClick={() => {\r\n                    if (activeRoom.id !== item.id) {\r\n                      setActiveRoom({ id: item.id, name: item.name });\r\n                    }\r\n                    isMobile && setShowRooms(false);\r\n                  }}\r\n                  className=\"px-2 bg-chat pointer d-flex w-100 justify-content-between align-items-center\"\r\n                >\r\n                  <div className=\"col\">{item.name}</div>\r\n                  <div className=\"col-2 py-2 d-flex justify-content-center\">\r\n                    <ArrowRightLineIcon\r\n                      width={20}\r\n                      height={20}\r\n                      fill={ICON_COLOR}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {item.id !== \"public\" && (\r\n                  <div className=\"px-2 d-flex align-items-center py-2\">\r\n                    <div className=\"text-break col\">{item.id}</div>\r\n                    <div\r\n                      onClick={() => {\r\n                        // copy text to clipboard\r\n                        navigator.clipboard.writeText(item.id);\r\n                        toast(\"Room ID Copied to clipboard\", {\r\n                          theme: \"colored\",\r\n                          position: \"top-right\",\r\n                          className: \"opacity-toast text-white\",\r\n                        });\r\n                      }}\r\n                      className=\"col-2 d-flex justify-content-center pointer\"\r\n                    >\r\n                      <CopyIcon\r\n                        width={ICON_SIZE}\r\n                        height={ICON_SIZE}\r\n                        fill={ICON_COLOR}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"text-white\" style={{ flexGrow: 1 }}>\r\n            <div\r\n              className=\"my-2 ms-2 d-flex align-items-center justify-content-between\"\r\n              style={{ fontSize: \"0.75rem\" }}\r\n            >\r\n              Member :\r\n              <div>\r\n                <div\r\n                  onClick={() => {\r\n                    setModalAction({ action: \"leave\", isOpen: true });\r\n                  }}\r\n                  className={`${\r\n                    activeRoom.id === \"public\" ? \"d-none\" : \"\"\r\n                  } btn me-1 bg-dark pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                  style={{\r\n                    borderRadius: \"50%\",\r\n                    width: 30,\r\n                    height: 30,\r\n                    zIndex: 20,\r\n                  }}\r\n                >\r\n                  <ExitIcon\r\n                    width={ICON_SIZE}\r\n                    height={ICON_SIZE}\r\n                    fill={ICON_COLOR}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {activeMembers.map((item, index) => (\r\n                <img\r\n                  key={index}\r\n                  style={{\r\n                    width: \"1.5rem\",\r\n                    height: \"1.5rem\",\r\n                    borderRadius: \"50%\",\r\n                    marginLeft: \"0.5rem\",\r\n                  }}\r\n                  src={item.photoURL}\r\n                  alt=\"avatar\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`chatroom shadow d-flex flex-column position-relative ${\r\n          isMobile ? \"\" : \"overflow-hidden\"\r\n        }`}\r\n      >\r\n        <div\r\n          onClick={() => {\r\n            setShowRooms(!showRooms);\r\n          }}\r\n          className={`${\r\n            showRooms && isMobile ? \"\" : \"d-none\"\r\n          } backdrop position-absolute w-100 h-100`}\r\n          style={{ zIndex: 1010 }}\r\n        />\r\n        <div\r\n          className={`${\r\n            isMobile ? \"position-fixed\" : \"d-none\"\r\n          } start-0 h-100 d-flex align-items-start justify-content-start`}\r\n          style={{ zIndex: 1020 }}\r\n        >\r\n          <div\r\n            className={`p-0 d-flex ${\r\n              isMobile\r\n                ? \"flex-column align-items-center\"\r\n                : \"d-flex align-items-start\"\r\n            } h-100 justify-content-start position-relative`}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div\r\n                onClick={() => {\r\n                  setShowRooms(!showRooms);\r\n                }}\r\n                style={{\r\n                  zIndex: 20,\r\n                  minHeight: \"30px\",\r\n                }}\r\n                className={`rounded-pill pointer badge p-2 mt-1 ms-1 shadow ${\r\n                  showRooms ? \"d-none\" : \"bg-dark\"\r\n                }`}\r\n              >\r\n                {activeRoom.name}\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setModalAction({ action: \"add\", isOpen: true });\r\n                }}\r\n                className={`${\r\n                  !showRooms ? \"d-none\" : \"\"\r\n                } btn ms-1 bg-chat mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  width: 30,\r\n                  height: 30,\r\n                  zIndex: 20,\r\n                }}\r\n              >\r\n                <PlusRoundIcon\r\n                  width={ICON_SIZE}\r\n                  height={ICON_SIZE}\r\n                  fill={ICON_COLOR}\r\n                />\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setModalAction({ action: \"join\", isOpen: true });\r\n                }}\r\n                className={`${\r\n                  !showRooms ? \"d-none\" : \"\"\r\n                } btn ms-1 bg-chat mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  width: 30,\r\n                  height: 30,\r\n                  zIndex: 20,\r\n                }}\r\n              >\r\n                <SearchIcon\r\n                  width={ICON_SIZE}\r\n                  height={ICON_SIZE}\r\n                  fill={ICON_COLOR}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"transition pe-1 shadow bg-primary position-absolute h-100\"\r\n              style={{\r\n                transform: showRooms ? \"translateX(0)\" : \"translateX(-12rem)\",\r\n                width: \"12rem\",\r\n                fontSize: \"0.75rem\",\r\n                paddingTop: \"4rem\",\r\n                left: \"0px\",\r\n                zIndex: 10,\r\n              }}\r\n            >\r\n              <div className=\"h-50 border-bottom-chat overflow-auto\">\r\n                {[{ name: \"public\", id: \"public\" }, ...rooms].map(\r\n                  (item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"mb-1 text-white p-0 text-start w-100\"\r\n                    >\r\n                      <div\r\n                        onClick={() => {\r\n                          if (activeRoom.id !== item.id) {\r\n                            setActiveRoom({ id: item.id, name: item.name });\r\n                          }\r\n                          isMobile && setShowRooms(false);\r\n                        }}\r\n                        className=\"px-2 bg-chat pointer d-flex w-100 justify-content-between align-items-center\"\r\n                      >\r\n                        <div className=\"col\">{item.name}</div>\r\n                        <div className=\"col-2 py-2 d-flex justify-content-center\">\r\n                          <ArrowRightLineIcon\r\n                            width={20}\r\n                            height={20}\r\n                            fill={ICON_COLOR}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {item.id !== \"public\" && (\r\n                        <div className=\"px-2 d-flex align-items-center py-2\">\r\n                          <div className=\"text-break col\">{item.id}</div>\r\n                          <div\r\n                            onClick={() => {\r\n                              // copy text to clipboard\r\n                              navigator.clipboard.writeText(item.id);\r\n                              toast(\"Room ID Copied to clipboard\", {\r\n                                theme: \"colored\",\r\n                                position: \"top-center\",\r\n                                className: \"opacity-toast text-white\",\r\n                              });\r\n                            }}\r\n                            className=\"col-2 d-flex justify-content-center pointer\"\r\n                          >\r\n                            <CopyIcon\r\n                              width={ICON_SIZE}\r\n                              height={ICON_SIZE}\r\n                              fill={ICON_COLOR}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"text-white\" style={{ flexGrow: 1 }}>\r\n                <div className=\"my-2 ms-2 d-flex justify-content-between align-items-center\">\r\n                  Member :\r\n                  <div>\r\n                    <div\r\n                      onClick={() => {\r\n                        setModalAction({ action: \"leave\", isOpen: true });\r\n                      }}\r\n                      className={`${\r\n                        activeRoom.id === \"public\" ? \"d-none\" : \"\"\r\n                      } btn me-1 bg-chat pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                      style={{\r\n                        borderRadius: \"50%\",\r\n                        width: 30,\r\n                        height: 30,\r\n                        zIndex: 20,\r\n                      }}\r\n                    >\r\n                      <ExitIcon\r\n                        width={ICON_SIZE}\r\n                        height={ICON_SIZE}\r\n                        fill={ICON_COLOR}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  {activeMembers.map((item, index) => (\r\n                    <img\r\n                      key={index}\r\n                      style={{\r\n                        width: \"1.5rem\",\r\n                        height: \"1.5rem\",\r\n                        borderRadius: \"50%\",\r\n                        marginLeft: \"0.5rem\",\r\n                      }}\r\n                      src={item.photoURL}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          ref={headerRef}\r\n          className=\"room-title d-none d-sm-flex justify-content-center align-items-center border-bottom text-center shadow\"\r\n          style={{\r\n            height: CHAT_TOP_HEIGHT,\r\n            fontSize: \"1rem\",\r\n          }}\r\n        >\r\n          {activeRoom.name}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            isMobile\r\n              ? window.scrollTo({\r\n                  top: document.body.scrollHeight,\r\n                  behavior: \"smooth\",\r\n                })\r\n              : scrollRef.current.scrollTo({\r\n                  top: scrollRef.current.scrollHeight,\r\n                  behavior: \"smooth\",\r\n                });\r\n          }}\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            opacity: visible ? 1 : 0,\r\n            transform: visible ? \"translateY(0)\" : \"translateX(100%)\",\r\n          }}\r\n          className={`${\r\n            isMobile ? \"position-fixed\" : \"position-absolute\"\r\n          } scroll-to pointer bg-dark transition mb-5 mb-sm-0 shadow`}\r\n        >\r\n          <Icon svg name=\"arrow-down\" size={20} color={\"white\"} />\r\n        </div>\r\n        <div\r\n          ref={scrollRef}\r\n          onScroll={handleScroll}\r\n          className=\"room-content hideScroll pt-5 pt-sm-1\"\r\n          style={{\r\n            paddingBottom: paddingBottom,\r\n          }}\r\n        >\r\n          {messages.map((item, index) => (\r\n            <ChatItem\r\n              key={index}\r\n              parentLength={messages.length}\r\n              itemIndex={index}\r\n              name={item.displayName}\r\n              message={item.message}\r\n              self={user?.uid === item?.uid}\r\n              avatar={item.photoURL}\r\n              imageURL={item.imageURL}\r\n              uid={item.uid}\r\n              createdAt={item.createdAt}\r\n              onPress={(action) => {\r\n                setPendingAction({ action: action, id: item.id });\r\n                setModalAction({ action: \"delete\", isOpen: true });\r\n              }}\r\n              scrollToBottom={() => {\r\n                isMobile\r\n                ? window.scrollTo({\r\n                    top: document.body.scrollHeight,\r\n                    behavior: \"smooth\",\r\n                  })\r\n                : scrollRef.current.scrollTo({\r\n                    top: scrollRef.current.scrollHeight,\r\n                    behavior: \"smooth\",\r\n                  });\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div\r\n          className=\"border-top pt-3 pb-5 pb-sm-3 input-fixed\"\r\n          style={{ zIndex: 30 }}\r\n        >\r\n          <Formik\r\n            initialValues={{\r\n              msg: \"\",\r\n            }}\r\n            validationSchema={Schema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ values }) => (\r\n              <Form className=\"d-flex w-100 px-4\" onChange={() => {}}>\r\n                <div className=\"col\">\r\n                  <InputField\r\n                    onInputChange={(e: any) => {\r\n                      e !== \"\" &&\r\n                        e.length > 0 &&\r\n                        handleRows(e.split(\"\\n\").length);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: \"rgba(54, 57, 63, 0.8)\",\r\n                      border: \"none\",\r\n                      caretColor: \"white\",\r\n                      color: \"white\",\r\n                      resize: \"none\",\r\n                    }}\r\n                    name=\"msg\"\r\n                    placeholder=\"Input something...\"\r\n                    type=\"textarea\"\r\n                    showError={false}\r\n                    rows={rows}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                  <ImageUploading\r\n                    multiple\r\n                    value={images}\r\n                    onChange={onImageChange}\r\n                    maxNumber={undefined}\r\n                    onError={(e) => {\r\n                      toast.error(\r\n                        e?.maxFileSize\r\n                          ? \"image must be smaller than 2MB\"\r\n                          : \"Unsupported format\",\r\n                        {\r\n                          theme: \"colored\",\r\n                          position: isMobile ? \"top-center\" : \"top-right\",\r\n                          className: \"opacity-toast text-white\",\r\n                        }\r\n                      );\r\n                    }}\r\n                    maxFileSize={2 * 1024 * 1024}\r\n                  >\r\n                    {({\r\n                      imageList,\r\n                      onImageUpload,\r\n                      onImageRemoveAll,\r\n                      onImageUpdate,\r\n                      onImageRemove,\r\n                      errors,\r\n                    }) => (\r\n                      // write your building UI\r\n                      <div\r\n                        className={`${\r\n                          isMobile ? \"\" : \"position-relative\"\r\n                        } upload__image-wrapper d-flex`}\r\n                      >\r\n                        <div\r\n                          className={`${\r\n                            isMobile ? \"\" : \"me-4\"\r\n                          } d-flex overflow-auto end-0 position-fixed`}\r\n                          style={{\r\n                            bottom: paddingBottom,\r\n                            maxWidth: isMobile\r\n                              ? \"100vw\"\r\n                              : scrollRef?.current?.offsetWidth,\r\n                          }}\r\n                        >\r\n                          {imageList.map((image, index) => (\r\n                            <div key={index} className=\"image-item d-flex\">\r\n                              <img\r\n                                src={image.dataURL}\r\n                                alt=\"\"\r\n                                height=\"100\"\r\n                                className=\"me-2\"\r\n                              />\r\n                              <button\r\n                                className=\"btn p-0 me-2 align-self-start\"\r\n                                style={{ borderRadius: \"50%\", border: \"none\" }}\r\n                                onClick={() => onImageRemove(index)}\r\n                              >\r\n                                <WarningRoundIcon\r\n                                  width={15}\r\n                                  height={15}\r\n                                  fill={ICON_COLOR}\r\n                                />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n\r\n                        <button\r\n                          type=\"button\"\r\n                          className={`btn p-0 me-2`}\r\n                          style={{ borderRadius: \"50%\", border: \"none\" }}\r\n                          onClick={onImageUpload}\r\n                        >\r\n                          <FileUploadIcon\r\n                            width={30}\r\n                            height={30}\r\n                            fill={ICON_COLOR}\r\n                          />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </ImageUploading>\r\n\r\n                  <button\r\n                    className=\"btn p-0\"\r\n                    style={{ borderRadius: \"50%\", border: \"none\" }}\r\n                    type=\"submit\"\r\n                    // disabled={loginLoading}\r\n                  >\r\n                    <ReadyRoundIcon width={30} height={30} fill={ICON_COLOR} />\r\n                  </button>\r\n                </div>\r\n                <div className=\"mt-4 text-center\"></div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      <ConfimrDialog\r\n        open={modalAction.isOpen}\r\n        title={\r\n          modalAction.action === \"delete\"\r\n            ? \"Confirm delete?\"\r\n            : modalAction.action === \"add\"\r\n            ? \"Add new room\"\r\n            : modalAction.action === \"join\"\r\n            ? \"Join room\"\r\n            : modalAction.action === \"leave\"\r\n            ? \"Leave room\"\r\n            : \"\"\r\n        }\r\n        withInput={[\"add\", \"join\"].includes(modalAction.action)}\r\n        message={\r\n          modalAction.action === \"delete\"\r\n            ? \"Deleted content cannot be recovered.\"\r\n            : modalAction.action === \"add\"\r\n            ? \"Please input room name.\"\r\n            : modalAction.action === \"join\"\r\n            ? \"Please input Room ID to join a room.\"\r\n            : modalAction.action === \"leave\"\r\n            ? \"Confirm to leave this room?\"\r\n            : \"\"\r\n        }\r\n        onCancel={() => {\r\n          if (modalAction.action === \"delete\") {\r\n            setPendingAction(undefined);\r\n          }\r\n          setModalAction({ action: \"\", isOpen: false });\r\n        }}\r\n        onConfirm={(e) => {\r\n          switch (modalAction.action) {\r\n            case \"delete\":\r\n              handleOptions();\r\n              break;\r\n            case \"add\":\r\n              handleAddNewRoom(e);\r\n              break;\r\n            case \"join\":\r\n              handleJoinRoom(e);\r\n              break;\r\n            case \"leave\":\r\n              handleLeaveRoom();\r\n          }\r\n        }}\r\n      />\r\n      {/* <ConfimrDialog\r\n        open={modalAction.isOpen}\r\n        title={\"Add new room\"}\r\n        message={\"Please input room name.\"}\r\n        withInput\r\n        onCancel={() => {\r\n          setNewRoomDialog(false);\r\n        }}\r\n        onConfirm={(e) => {\r\n          handleAddNewRoom(e);\r\n        }}\r\n      />\r\n      <ConfimrDialog\r\n        open={modalAction.isOpen}\r\n        title={\"Join room\"}\r\n        message={\"Please input Room ID to join a room.\"}\r\n        withInput\r\n        onCancel={() => {\r\n          setJoinRoomDialog(false);\r\n        }}\r\n        onConfirm={(e) => {\r\n          handleJoinRoom(e);\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["Schema","Yup","shape","msg","ICON_COLOR","CHAT_TOP_HEIGHT","ICON_SIZE","ChatPage","user","useSelector","rootState","auth","dispatch","useDispatch","isMobile","useMediaQuery","query","useState","visible","setVisible","pendingAction","setPendingAction","showRooms","setShowRooms","id","name","activeRoom","setActiveRoom","activeMembers","setActiveMembers","rooms","setRooms","action","isOpen","modalAction","setModalAction","paddingBottom","setPaddingBottom","rows","setRows","collection","db","orderBy","limit","querying","setQuerying","images","setImages","onImageChange","imageList","addUpdateIndex","console","log","headerRef","useRef","scrollRef","storage","getStorage","useEffect","messages","useFirestoreQuery","getTotalRooms","useCallback","msgs","roomQ","where","uid","getDocs","querySnapshotRoom","roomTotal","forEach","doc","push","data","roomDetail","find","room","userQ","members","querySnapshotUser","unique","_","map","f","photoURL","displayName","window","scrollTo","top","document","body","scrollHeight","behavior","current","setActiveRoute","windowScroll","e","scrollTop","scrollY","clientHeight","innerHeight","addEventListener","removeEventListener","handleScroll","target","handleAddNewRoom","addDoc","newRoom","message","createdAt","Timestamp","handleJoinRoom","roomRef","getDoc","roomData","exists","includes","updateDoc","toast","theme","position","className","handleLeaveRoom","newMemberList","filter","mem","onSubmit","values","actions","imageURL","length","load","i","file","type","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","state","error","code","getDownloadURL","then","downloadURL","trimmed","trim","_q","resetForm","render","autoClose","isLoading","deleteChatItem","deleteDoc","style","maxWidth","minHeight","onClick","borderRadius","width","height","zIndex","PlusRound","fill","Search","fontSize","left","item","index","ArrowRightLine","navigator","clipboard","writeText","Copy","flexGrow","Exit","marginLeft","src","alt","transform","paddingTop","opacity","svg","size","color","onScroll","parentLength","itemIndex","self","avatar","onPress","scrollToBottom","initialValues","validationSchema","onChange","onInputChange","_rows","setTimeout","handleRows","split","backgroundColor","border","caretColor","resize","placeholder","showError","multiple","value","maxNumber","undefined","onError","maxFileSize","onImageUpload","onImageRemove","onImageRemoveAll","onImageUpdate","errors","bottom","offsetWidth","image","dataURL","WarningRound","FileUpload","ReadyRound","open","title","withInput","onCancel","onConfirm"],"sourceRoot":""}