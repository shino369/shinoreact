{"version":3,"file":"static/js/316.6941ef6c.chunk.js","mappings":"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","sources":["app/pages/chat/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setActiveRoute } from \"store/activeRoute\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\n// react suite\r\nimport ReadyRoundIcon from \"@rsuite/icons/ReadyRound\";\r\nimport PeoplesIcon from \"@rsuite/icons/Peoples\";\r\nimport PlusRoundIcon from \"@rsuite/icons/PlusRound\";\r\nimport SearchIcon from \"@rsuite/icons/Search\";\r\nimport CopyIcon from \"@rsuite/icons/Copy\";\r\nimport ArrowRightLineIcon from \"@rsuite/icons/ArrowRightLine\";\r\nimport ExitIcon from \"@rsuite/icons/Exit\";\r\n\r\n// form\r\nimport { Input, Table } from \"reactstrap\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// firebase\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  updateDoc,\r\n  deleteDoc,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"app/hooks/firebase\";\r\n\r\n// library\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\n// hook\r\nimport { useFirestoreQuery } from \"app/hooks/commonHook\";\r\n\r\n// style\r\nimport \"./index.scss\";\r\n\r\n// component\r\nimport { ChatItem, Icon, InputField } from \"app/components\";\r\nimport ConfimrDialog from \"app/components/dialog/confirmDialog\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Schema = Yup.object().shape({\r\n  msg: Yup.string().required(\"required\"),\r\n});\r\n\r\ntype FormItem = {\r\n  msg: string;\r\n};\r\n\r\nconst ICON_COLOR = \"#fff\";\r\nconst CHAT_TOP_HEIGHT = \"3.5rem\";\r\nconst ICON_SIZE = 15;\r\n\r\ninterface PendingAction {\r\n  action: string;\r\n  id: string;\r\n}\r\n\r\ninterface Room {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface ModalAction {\r\n  action: string;\r\n  isOpen: boolean;\r\n}\r\n\r\nexport const ChatPage = () => {\r\n  const { user } = useSelector((rootState: RootState) => rootState.auth);\r\n  const dispatch = useDispatch();\r\n  const isMobile = useMediaQuery({ query: `(max-width: 576px)` });\r\n  const [newMessage, setNewMessage] = useState<any[]>([]);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [pendingAction, setPendingAction] = useState<PendingAction>();\r\n  const [showRooms, setShowRooms] = useState<boolean>(!isMobile);\r\n  const [activeRoom, setActiveRoom] = useState<Room>({\r\n    id: \"public\",\r\n    name: \"public\",\r\n  });\r\n  const [activeMembers, setActiveMembers] = useState<any[]>([]);\r\n  const [rooms, setRooms] = useState<any[]>([]);\r\n  const [modalAction, setModalAction] = useState<ModalAction>({\r\n    action: \"\",\r\n    isOpen: false,\r\n  });\r\n\r\n  const [paddingBottom, setPaddingBottom] = useState<string>(\r\n    isMobile ? \"7rem\" : \"1rem\"\r\n  );\r\n  const [rows, setRows] = useState<number>(1);\r\n\r\n  const [querying, setQuerying] = useState<any>(\r\n    query(collection(db, \"messages\"), orderBy(\"createdAt\"), limit(100))\r\n  );\r\n  const headerRef = useRef<any>(null);\r\n  const scrollRef = useRef<any>(null);\r\n\r\n  // change query when activeRoom change\r\n  useEffect(() => {\r\n    if (activeRoom.id === \"public\") {\r\n      setQuerying(\r\n        query(collection(db, \"messages\"), orderBy(\"createdAt\"), limit(100))\r\n      );\r\n    } else {\r\n      setQuerying(\r\n        query(\r\n          collection(db, \"rooms\", activeRoom.id, \"messages\"),\r\n          orderBy(\"createdAt\"),\r\n          limit(100)\r\n        )\r\n      );\r\n    }\r\n  }, [activeRoom]);\r\n\r\n  const messages = useFirestoreQuery(querying);\r\n\r\n  // get rooms list and set active user\r\n  const getTotalRooms = useCallback(\r\n    async (msgs: any) => {\r\n      const roomQ = query(\r\n        collection(db, \"rooms\"),\r\n        where(\"members\", \"array-contains\", user!.uid)\r\n      );\r\n      const querySnapshotRoom = await getDocs(roomQ);\r\n      let roomTotal: any = [];\r\n      querySnapshotRoom.forEach((doc) => {\r\n        roomTotal.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      if (activeRoom.id !== \"public\") {\r\n        const roomDetail = roomTotal.find(\r\n          (room: any) => room.id === activeRoom.id\r\n        );\r\n        const userQ = query(\r\n          collection(db, \"users\"),\r\n          where(\"uid\", \"in\", roomDetail.members)\r\n        );\r\n        const querySnapshotUser = await getDocs(userQ);\r\n        let members: any = [];\r\n        querySnapshotUser.forEach((doc) => {\r\n          members.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setActiveMembers(members);\r\n        console.log(members);\r\n      } else if (activeRoom.id === \"public\") {\r\n        // remove duplicate from message by uid\r\n        const unique = _.uniqBy(msgs, \"uid\").map((f: any) => ({\r\n          photoURL: f.photoURL,\r\n          displayName: f.displayName,\r\n          uid: f.uid,\r\n        }));\r\n        setActiveMembers(unique);\r\n      }\r\n\r\n      setRooms(roomTotal);\r\n      console.log(\"triggered\");\r\n    },\r\n    [activeRoom]\r\n  );\r\n\r\n  // scroll to bottom when new message come\r\n  useEffect(() => {\r\n    isMobile\r\n      ? window.scrollTo({\r\n          top: document.body.scrollHeight,\r\n          behavior: \"smooth\",\r\n        })\r\n      : scrollRef.current.scrollTo({\r\n          top: scrollRef.current.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n\r\n    getTotalRooms(messages);\r\n  }, [messages, getTotalRooms]);\r\n\r\n  /*\r\n  fake data to prevent heavy read of firestore in testing\r\n  [\r\n    {\r\n      displayName: \"test\",\r\n      id: \"gkjshgkjsnh\",\r\n      photoURL: \"\",\r\n      createdAt: \"\",\r\n      uid: \"safsgsakfasj\",\r\n      message: \"safakgalgalj\",\r\n    },\r\n  ]; \r\n  */\r\n\r\n  useEffect(() => {\r\n    dispatch(setActiveRoute(\"chat\"));\r\n  }, [dispatch]);\r\n\r\n  // scroll to bottom button effect (body in mobile)\r\n  useEffect(() => {\r\n    const windowScroll = _.debounce((e) => {\r\n      if (isMobile) {\r\n        const scrollTop = window.scrollY;\r\n        const scrollHeight = document.body.scrollHeight;\r\n        const clientHeight = window.innerHeight;\r\n        if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n          setVisible(true);\r\n        } else {\r\n          setVisible(false);\r\n        }\r\n      }\r\n    }, 100);\r\n\r\n    window.addEventListener(\"scroll\", windowScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", windowScroll);\r\n    };\r\n  }, []);\r\n\r\n  // scroll to bottom button effect (container in breakpoint > sm)\r\n  const handleScroll = _.debounce((e) => {\r\n    if (!isMobile) {\r\n      const scrollTop = e.target.scrollTop;\r\n      const scrollHeight = e.target.scrollHeight;\r\n      const clientHeight = e.target.clientHeight;\r\n      // console.log(scrollTop + clientHeight, scrollHeight);\r\n      if (scrollTop + clientHeight + 200 < scrollHeight) {\r\n        setVisible(true);\r\n      } else {\r\n        setVisible(false);\r\n      }\r\n    }\r\n  }, 100);\r\n\r\n  // add new room\r\n  const handleAddNewRoom = useCallback(\r\n    async (room: any) => {\r\n      const newRoom = await addDoc(collection(db, \"rooms\"), {\r\n        name: room,\r\n        members: [user!.uid],\r\n      });\r\n      // add subcollection messages to newRoom\r\n      await addDoc(collection(db, \"rooms\", newRoom.id, \"messages\"), {\r\n        uid: user!.uid,\r\n        displayName: user!.displayName,\r\n        photoURL: user!.photoURL,\r\n        message: \"Welcome to the room\",\r\n        createdAt: Timestamp.now(),\r\n      });\r\n\r\n      setModalAction({action: '' ,isOpen: false});\r\n      setActiveRoom({ id: newRoom.id, name: room });\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const handleJoinRoom = useCallback(\r\n    async (room: any) => {\r\n      const roomRef = doc(db, \"rooms\", room);\r\n      const roomData = await getDoc(roomRef);\r\n      if (roomData.exists()) {\r\n        const members = roomData.data().members;\r\n        if (members.includes(user!.uid)) {\r\n          setActiveRoom({ id: roomData.id, name: roomData.data().name });\r\n          setModalAction({action: '' ,isOpen: false});\r\n        } else {\r\n          // add user into members\r\n          await updateDoc(roomRef, {\r\n            members: [...members, user!.uid],\r\n          });\r\n          setActiveRoom({ id: roomData.id, name: roomData.data().name });\r\n        }\r\n      } else {\r\n        toast(\"ERROR 404: Room not found\", {\r\n          theme: \"colored\",\r\n          position: isMobile ? \"top-center\" : \"top-right\",\r\n          className: \"opacity-toast text-white\",\r\n        });\r\n      }\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const handleLeaveRoom = useCallback(async () => {\r\n    const roomRef = doc(db, \"rooms\", activeRoom.id);\r\n    const newMemberList = activeMembers.filter((mem) => mem.uid !== user!.uid);\r\n    await updateDoc(roomRef, { members: newMemberList });\r\n    setActiveRoom({ id: \"public\", name: \"Public\" });\r\n  }, [activeMembers]);\r\n\r\n  // handle form submit new message\r\n  const onSubmit = async (\r\n    values: FormItem,\r\n    actions: FormikHelpers<FormItem>\r\n  ) => {\r\n    const { msg } = values;\r\n    const trimmed = msg.trim();\r\n    if (trimmed.length > 0) {\r\n      const _q =\r\n        activeRoom.id === \"public\"\r\n          ? collection(db, \"messages\")\r\n          : collection(db, \"rooms\", activeRoom.id, \"messages\");\r\n\r\n      const message = {\r\n        uid: user!.uid,\r\n        displayName: user!.displayName,\r\n        photoURL: user!.photoURL,\r\n        message: trimmed,\r\n        createdAt: Timestamp.now(),\r\n      };\r\n      const docRef = await addDoc(_q, message);\r\n    }\r\n    actions.resetForm();\r\n    // console.log(\"values\", values);\r\n    // submit to firebase\r\n  };\r\n\r\n  // auto grow textarea\r\n  const handleRows = (rows: number) => {\r\n    const _rows = rows > 5 ? 5 : rows;\r\n    setRows(_rows);\r\n    if (isMobile) {\r\n      setPaddingBottom(`${_rows * 1.5 + 5.5}rem`);\r\n    }\r\n    setTimeout(() => {\r\n      isMobile\r\n        ? window.scrollTo({\r\n            top: document.body.scrollHeight,\r\n            behavior: \"smooth\",\r\n          })\r\n        : scrollRef.current.scrollTo({\r\n            top: scrollRef.current.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n    }, 50);\r\n  };\r\n\r\n  // delete message\r\n  const deleteChatItem = useCallback(\r\n    async (id: string) => {\r\n      if (activeRoom.id === \"public\") {\r\n        const res = await deleteDoc(doc(db, \"messages\", id));\r\n      } else {\r\n        const res = await deleteDoc(\r\n          doc(db, \"rooms\", activeRoom.id, \"messages\", id)\r\n        );\r\n      }\r\n\r\n      // console.log(res);\r\n    },\r\n    [activeRoom]\r\n  );\r\n\r\n  // after confirm dialog\r\n  const handleOptions = () => {\r\n    if (pendingAction && pendingAction.action === \"DELETE\") {\r\n      deleteChatItem(pendingAction.id);\r\n    }\r\n    setPendingAction(undefined);\r\n    setModalAction({ action: \"\", isOpen: false });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center chatroom-wrapper px-sm-4 pt-sm-3 pb-sm-5\">\r\n      <div\r\n        className={`${\r\n          isMobile ? \"d-none\" : \"\"\r\n        } start-0 h-100 d-flex align-items-start justify-content-start bg-room overflow-hidden`}\r\n      >\r\n        <div\r\n          className={`p-0 d-flex flex-column h-100 justify-content-start position-relative`}\r\n        >\r\n          <div\r\n            className=\"d-flex align-items-center\"\r\n            style={{\r\n              minHeight: CHAT_TOP_HEIGHT,\r\n            }}\r\n          >\r\n            <div\r\n              onClick={() => {\r\n                setModalAction({action: 'add' ,isOpen: true});\r\n              }}\r\n              className={`${\r\n                !showRooms ? \"d-none\" : \"\"\r\n              } btn ms-1 bg-dark mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n              style={{\r\n                borderRadius: \"50%\",\r\n                width: 30,\r\n                height: 30,\r\n                zIndex: 20,\r\n              }}\r\n            >\r\n              <PlusRoundIcon\r\n                width={ICON_SIZE}\r\n                height={ICON_SIZE}\r\n                fill={ICON_COLOR}\r\n              />\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                setModalAction({action: 'join' ,isOpen: true});\r\n              }}\r\n              className={`${\r\n                !showRooms ? \"d-none\" : \"\"\r\n              } btn ms-1 bg-dark mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n              style={{\r\n                borderRadius: \"50%\",\r\n                width: 30,\r\n                height: 30,\r\n                zIndex: 20,\r\n              }}\r\n            >\r\n              <SearchIcon\r\n                width={ICON_SIZE}\r\n                height={ICON_SIZE}\r\n                fill={ICON_COLOR}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"transition me-1 overflow-auto border-bottom-chat\"\r\n            style={{\r\n              // transform: showRooms ? \"translateX(0)\" : \"translateX(-12rem)\",\r\n              width: \"12rem\",\r\n              fontSize: \"0.75rem\",\r\n              height: \"calc(50% - 3.5rem)\",\r\n              left: \"0px\",\r\n              zIndex: 10,\r\n            }}\r\n          >\r\n            {[{ name: \"public\", id: \"public\" }, ...rooms].map((item, index) => (\r\n              <div key={index} className=\"mb-1 text-white p-0 text-start w-100\">\r\n                <div\r\n                  onClick={() => {\r\n                    if (activeRoom.id !== item.id) {\r\n                      setActiveRoom({ id: item.id, name: item.name });\r\n                    }\r\n                    isMobile && setShowRooms(false);\r\n                  }}\r\n                  className=\"px-2 bg-chat pointer d-flex w-100 justify-content-between align-items-center\"\r\n                >\r\n                  <div className=\"col\">{item.name}</div>\r\n                  <div className=\"col-2 py-2 d-flex justify-content-center\">\r\n                    <ArrowRightLineIcon\r\n                      width={20}\r\n                      height={20}\r\n                      fill={ICON_COLOR}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {item.id !== \"public\" && (\r\n                  <div className=\"px-2 d-flex align-items-center py-2\">\r\n                    <div className=\"text-break col\">{item.id}</div>\r\n                    <div\r\n                      onClick={() => {\r\n                        // copy text to clipboard\r\n                        navigator.clipboard.writeText(item.id);\r\n                        toast(\"Room ID Copied to clipboard\", {\r\n                          theme: \"colored\",\r\n                          position: \"top-right\",\r\n                          className: \"opacity-toast text-white\",\r\n                        });\r\n                      }}\r\n                      className=\"col-2 d-flex justify-content-center pointer\"\r\n                    >\r\n                      <CopyIcon\r\n                        width={ICON_SIZE}\r\n                        height={ICON_SIZE}\r\n                        fill={ICON_COLOR}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"text-white\" style={{ flexGrow: 1 }}>\r\n            <div\r\n              className=\"my-2 ms-2 d-flex align-items-center justify-content-between\"\r\n              style={{ fontSize: \"0.75rem\" }}\r\n            >\r\n              Member :\r\n              <div>\r\n                <div\r\n                  onClick={() => {\r\n                    setModalAction({action: 'leave' ,isOpen: true});\r\n                  }}\r\n                  className={`${\r\n                    activeRoom.id === \"public\" ? \"d-none\" : \"\"\r\n                  } btn me-1 bg-dark pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                  style={{\r\n                    borderRadius: \"50%\",\r\n                    width: 30,\r\n                    height: 30,\r\n                    zIndex: 20,\r\n                  }}\r\n                >\r\n                  <ExitIcon\r\n                    width={ICON_SIZE}\r\n                    height={ICON_SIZE}\r\n                    fill={ICON_COLOR}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {activeMembers.map((item, index) => (\r\n                <img\r\n                  key={index}\r\n                  style={{\r\n                    width: \"1.5rem\",\r\n                    height: \"1.5rem\",\r\n                    borderRadius: \"50%\",\r\n                    marginLeft: \"0.5rem\",\r\n                  }}\r\n                  src={item.photoURL}\r\n                  alt=\"avatar\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`chatroom shadow d-flex flex-column position-relative ${\r\n          isMobile ? \"\" : \"overflow-hidden\"\r\n        }`}\r\n      >\r\n        <div\r\n          onClick={() => {\r\n            setShowRooms(!showRooms);\r\n          }}\r\n          className={`${\r\n            showRooms && isMobile ? \"\" : \"d-none\"\r\n          } backdrop position-absolute w-100 h-100`}\r\n          style={{ zIndex: 1010 }}\r\n        />\r\n        <div\r\n          className={`${\r\n            isMobile ? \"position-fixed\" : \"d-none\"\r\n          } start-0 h-100 d-flex align-items-start justify-content-start`}\r\n          style={{ zIndex: 1020 }}\r\n        >\r\n          <div\r\n            className={`p-0 d-flex ${\r\n              isMobile\r\n                ? \"flex-column align-items-center\"\r\n                : \"d-flex align-items-start\"\r\n            } h-100 justify-content-start position-relative`}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div\r\n                onClick={() => {\r\n                  setShowRooms(!showRooms);\r\n                }}\r\n                style={{\r\n                  zIndex: 20,\r\n                  minHeight: \"30px\",\r\n                }}\r\n                className={`rounded-pill pointer badge p-2 mt-1 ms-1 shadow ${\r\n                  showRooms ? \"d-none\" : \"bg-dark\"\r\n                }`}\r\n              >\r\n                {activeRoom.name}\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setModalAction({action: 'add' ,isOpen: true});\r\n                }}\r\n                className={`${\r\n                  !showRooms ? \"d-none\" : \"\"\r\n                } btn ms-1 bg-chat mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  width: 30,\r\n                  height: 30,\r\n                  zIndex: 20,\r\n                }}\r\n              >\r\n                <PlusRoundIcon\r\n                  width={ICON_SIZE}\r\n                  height={ICON_SIZE}\r\n                  fill={ICON_COLOR}\r\n                />\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setModalAction({action: 'join' ,isOpen: true});\r\n                }}\r\n                className={`${\r\n                  !showRooms ? \"d-none\" : \"\"\r\n                } btn ms-1 bg-chat mt-1 pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  width: 30,\r\n                  height: 30,\r\n                  zIndex: 20,\r\n                }}\r\n              >\r\n                <SearchIcon\r\n                  width={ICON_SIZE}\r\n                  height={ICON_SIZE}\r\n                  fill={ICON_COLOR}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"transition pe-1 shadow bg-primary position-absolute h-100\"\r\n              style={{\r\n                transform: showRooms ? \"translateX(0)\" : \"translateX(-12rem)\",\r\n                width: \"12rem\",\r\n                fontSize: \"0.75rem\",\r\n                paddingTop: \"4rem\",\r\n                left: \"0px\",\r\n                zIndex: 10,\r\n              }}\r\n            >\r\n              <div className=\"h-50 border-bottom-chat overflow-auto\">\r\n                {[{ name: \"public\", id: \"public\" }, ...rooms].map(\r\n                  (item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"mb-1 text-white p-0 text-start w-100\"\r\n                    >\r\n                      <div\r\n                        onClick={() => {\r\n                          if (activeRoom.id !== item.id) {\r\n                            setActiveRoom({ id: item.id, name: item.name });\r\n                          }\r\n                          isMobile && setShowRooms(false);\r\n                        }}\r\n                        className=\"px-2 bg-chat pointer d-flex w-100 justify-content-between align-items-center\"\r\n                      >\r\n                        <div className=\"col\">{item.name}</div>\r\n                        <div className=\"col-2 py-2 d-flex justify-content-center\">\r\n                          <ArrowRightLineIcon\r\n                            width={20}\r\n                            height={20}\r\n                            fill={ICON_COLOR}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {item.id !== \"public\" && (\r\n                        <div className=\"px-2 d-flex align-items-center py-2\">\r\n                          <div className=\"text-break col\">{item.id}</div>\r\n                          <div\r\n                            onClick={() => {\r\n                              // copy text to clipboard\r\n                              navigator.clipboard.writeText(item.id);\r\n                              toast(\"Room ID Copied to clipboard\", {\r\n                                theme: \"colored\",\r\n                                position: \"top-center\",\r\n                                className: \"opacity-toast text-white\",\r\n                              });\r\n                            }}\r\n                            className=\"col-2 d-flex justify-content-center pointer\"\r\n                          >\r\n                            <CopyIcon\r\n                              width={ICON_SIZE}\r\n                              height={ICON_SIZE}\r\n                              fill={ICON_COLOR}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"text-white\" style={{ flexGrow: 1 }}>\r\n                <div className=\"my-2 ms-2 d-flex justify-content-between align-items-center\">\r\n                  Member :\r\n                  <div>\r\n                    <div\r\n                      onClick={() => {\r\n                        setModalAction({action: 'leave' ,isOpen: true});\r\n                      }}\r\n                      className={`${\r\n                        activeRoom.id === \"public\" ? \"d-none\" : \"\"\r\n                      } btn me-1 bg-chat pointer hover-opacity p-0 d-flex justify-content-center align-items-center`}\r\n                      style={{\r\n                        borderRadius: \"50%\",\r\n                        width: 30,\r\n                        height: 30,\r\n                        zIndex: 20,\r\n                      }}\r\n                    >\r\n                      <ExitIcon\r\n                        width={ICON_SIZE}\r\n                        height={ICON_SIZE}\r\n                        fill={ICON_COLOR}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  {activeMembers.map((item, index) => (\r\n                    <img\r\n                      key={index}\r\n                      style={{\r\n                        width: \"1.5rem\",\r\n                        height: \"1.5rem\",\r\n                        borderRadius: \"50%\",\r\n                        marginLeft: \"0.5rem\",\r\n                      }}\r\n                      src={item.photoURL}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          ref={headerRef}\r\n          className=\"room-title d-none d-sm-flex justify-content-center align-items-center border-bottom text-center shadow\"\r\n          style={{\r\n            height: CHAT_TOP_HEIGHT,\r\n            fontSize: \"1rem\",\r\n          }}\r\n        >\r\n          {activeRoom.name}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            isMobile\r\n              ? window.scrollTo({\r\n                  top: document.body.scrollHeight,\r\n                  behavior: \"smooth\",\r\n                })\r\n              : scrollRef.current.scrollTo({\r\n                  top: scrollRef.current.scrollHeight,\r\n                  behavior: \"smooth\",\r\n                });\r\n          }}\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            opacity: visible ? 1 : 0,\r\n            transform: visible ? \"translateY(0)\" : \"translateX(100%)\",\r\n          }}\r\n          className={`${\r\n            isMobile ? \"position-fixed\" : \"position-absolute\"\r\n          } scroll-to pointer bg-dark transition mb-5 mb-sm-0 shadow`}\r\n        >\r\n          <Icon svg name=\"arrow-down\" size={20} color={\"white\"} />\r\n        </div>\r\n        <div\r\n          ref={scrollRef}\r\n          onScroll={handleScroll}\r\n          className=\"room-content hideScroll pt-5 pt-sm-1\"\r\n          style={{\r\n            paddingBottom: paddingBottom,\r\n          }}\r\n        >\r\n          {messages.map((item, index) => (\r\n            <ChatItem\r\n              key={index}\r\n              name={item.displayName}\r\n              message={item.message}\r\n              self={user?.uid === item?.uid}\r\n              avatar={item.photoURL}\r\n              uid={item.uid}\r\n              createdAt={item.createdAt}\r\n              onPress={(action) => {\r\n                setPendingAction({ action: action, id: item.id });\r\n                setModalAction({ action: \"delete\", isOpen: true });\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div\r\n          className=\"border-top pt-3 pb-5 pb-sm-3 input-fixed\"\r\n          style={{ zIndex: 30 }}\r\n        >\r\n          <Formik\r\n            initialValues={{\r\n              msg: \"\",\r\n            }}\r\n            validationSchema={Schema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ values }) => (\r\n              <Form className=\"d-flex w-100 px-4\" onChange={() => {}}>\r\n                <div className=\"col\">\r\n                  <InputField\r\n                    onInputChange={(e: any) => {\r\n                      e !== \"\" &&\r\n                        e.length > 0 &&\r\n                        handleRows(e.split(\"\\n\").length);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: \"rgba(54, 57, 63, 0.8)\",\r\n                      border: \"none\",\r\n                      caretColor: \"white\",\r\n                      color: \"white\",\r\n                      resize: \"none\",\r\n                    }}\r\n                    name=\"msg\"\r\n                    placeholder=\"Input something...\"\r\n                    type=\"textarea\"\r\n                    showError={false}\r\n                    rows={rows}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                  <button\r\n                    className=\"btn p-0\"\r\n                    style={{ borderRadius: \"50%\", border: \"none\" }}\r\n                    type=\"submit\"\r\n                    // disabled={loginLoading}\r\n                  >\r\n                    <ReadyRoundIcon width={30} height={30} fill={ICON_COLOR} />\r\n                  </button>\r\n                </div>\r\n                <div className=\"mt-4 text-center\"></div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      <ConfimrDialog\r\n        open={modalAction.isOpen}\r\n        title={\r\n          modalAction.action === \"delete\"\r\n            ? \"Confirm delete?\"\r\n            : modalAction.action === \"add\"\r\n            ? \"Add new room\"\r\n            : modalAction.action === \"join\"\r\n            ? \"Join room\"\r\n            : modalAction.action === \"leave\"\r\n            ? \"Leave room\"\r\n            : \"\"\r\n        }\r\n        withInput={ ['add', 'join'].includes(modalAction.action)}\r\n        message={\r\n          modalAction.action === \"delete\"\r\n          ? \"Deleted content cannot be recovered.\"\r\n          : modalAction.action === \"add\"\r\n          ? \"Please input room name.\"\r\n          : modalAction.action === \"join\"\r\n          ? \"Please input Room ID to join a room.\"\r\n          : modalAction.action === \"leave\"\r\n          ? \"Confirm to leave this room?\"\r\n          : \"\"\r\n          \r\n          \r\n        }\r\n        onCancel={() => {\r\n          if(modalAction.action === \"delete\"){\r\n            setPendingAction(undefined);\r\n          }\r\n          setModalAction({action: '' ,isOpen: false});\r\n        }}\r\n        onConfirm={(e) => {\r\n          switch(modalAction.action){\r\n            case \"delete\":\r\n              handleOptions();\r\n              break;\r\n            case \"add\":\r\n              handleAddNewRoom(e);\r\n              break;\r\n            case \"join\":\r\n              handleJoinRoom(e);\r\n              break;\r\n            case \"leave\":\r\n              handleLeaveRoom();\r\n          }\r\n          \r\n        }}\r\n      />\r\n      {/* <ConfimrDialog\r\n        open={modalAction.isOpen}\r\n        title={\"Add new room\"}\r\n        message={\"Please input room name.\"}\r\n        withInput\r\n        onCancel={() => {\r\n          setNewRoomDialog(false);\r\n        }}\r\n        onConfirm={(e) => {\r\n          handleAddNewRoom(e);\r\n        }}\r\n      />\r\n      <ConfimrDialog\r\n        open={modalAction.isOpen}\r\n        title={\"Join room\"}\r\n        message={\"Please input Room ID to join a room.\"}\r\n        withInput\r\n        onCancel={() => {\r\n          setJoinRoomDialog(false);\r\n        }}\r\n        onConfirm={(e) => {\r\n          handleJoinRoom(e);\r\n        }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["Schema","Yup","shape","msg","required","ICON_COLOR","CHAT_TOP_HEIGHT","ICON_SIZE","ChatPage","user","useSelector","rootState","auth","dispatch","useDispatch","isMobile","useMediaQuery","query","useState","visible","setVisible","pendingAction","setPendingAction","showRooms","setShowRooms","id","name","activeRoom","setActiveRoom","activeMembers","setActiveMembers","rooms","setRooms","action","isOpen","modalAction","setModalAction","paddingBottom","setPaddingBottom","rows","setRows","collection","db","orderBy","limit","querying","setQuerying","headerRef","useRef","scrollRef","useEffect","messages","useFirestoreQuery","getTotalRooms","useCallback","msgs","roomQ","where","uid","getDocs","querySnapshotRoom","roomTotal","forEach","doc","push","data","roomDetail","find","room","userQ","members","querySnapshotUser","console","log","unique","_","map","f","photoURL","displayName","window","scrollTo","top","document","body","scrollHeight","behavior","current","setActiveRoute","windowScroll","e","scrollTop","scrollY","clientHeight","innerHeight","addEventListener","removeEventListener","handleScroll","target","handleAddNewRoom","addDoc","newRoom","message","createdAt","Timestamp","handleJoinRoom","roomRef","getDoc","roomData","exists","includes","updateDoc","toast","theme","position","className","handleLeaveRoom","newMemberList","filter","mem","onSubmit","values","actions","trimmed","trim","length","_q","resetForm","deleteChatItem","deleteDoc","style","minHeight","onClick","borderRadius","width","height","zIndex","PlusRound","fill","Search","fontSize","left","item","index","ArrowRightLine","navigator","clipboard","writeText","Copy","flexGrow","Exit","marginLeft","src","alt","transform","paddingTop","ref","opacity","svg","size","color","onScroll","self","avatar","onPress","initialValues","validationSchema","onChange","onInputChange","_rows","setTimeout","handleRows","split","backgroundColor","border","caretColor","resize","placeholder","type","showError","ReadyRound","open","title","withInput","onCancel","undefined","onConfirm"],"sourceRoot":""}