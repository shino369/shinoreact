{"version":3,"file":"static/js/316.f8b30a2d.chunk.js","mappings":"sVAiCMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,IAAKF,EAAAA,KAAaG,SAAS,cAYhBC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,MAAM,uBACjCC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAA0BA,EAAUC,QAAzDH,KACR,GAAoCI,EAAAA,EAAAA,UAAgB,IAApD,eACA,GADA,WAC8BA,EAAAA,EAAAA,WAAkB,IAAhD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAkB,GAA9C,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0CJ,EAAAA,EAAAA,YAA1C,eAAOK,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACRb,GAASc,EAAAA,EAAAA,IAAe,WACvB,CAACd,IACJ,IAAMe,GAAKhB,EAAAA,EAAAA,KACTiB,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aACfC,EAAAA,EAAAA,IAAQ,cACRC,EAAAA,EAAAA,IAAM,MAEFC,GAAWC,EAAAA,EAAAA,IAAkBN,GAC7BO,GAAYC,EAAAA,EAAAA,QAAY,MAC9B,GAA0CjB,EAAAA,EAAAA,UACxCT,EAAW,OAAS,QADtB,eAAO2B,EAAP,KAAsBC,EAAtB,KAGA,GAAwBnB,EAAAA,EAAAA,UAAiB,GAAzC,eAAOoB,EAAP,KAAaC,EAAb,MAEAd,EAAAA,EAAAA,YAAU,WACRhB,EACI+B,OAAOC,SAAS,CACdC,IAAKC,SAASC,KAAKC,aACnBC,SAAU,WAEZZ,EAAUa,QAAQN,SAAS,CACzBC,IAAKR,EAAUa,QAAQF,aACvBC,SAAU,aAEf,CAACd,KAGJP,EAAAA,EAAAA,YAAU,WACR,IAAMuB,EAAeC,IAAAA,UAAW,SAACC,GAG/B,GAAIzC,EAAU,CACZ,IAAM0C,EAAYX,OAAOY,QACnBP,EAAeF,SAASC,KAAKC,aAC7BQ,EAAeb,OAAOc,YAG1BlC,EADE+B,EAAYE,EAAe,IAAMR,MAMtC,KAGH,OADAL,OAAOe,iBAAiB,SAAUP,GAC3B,WACLR,OAAOgB,oBAAoB,SAAUR,MAEtC,IAEH,IAAMS,EAAeR,IAAAA,UAAW,SAACC,GAC/B,IAAKzC,EAAU,CACb,IAAM0C,EAAYD,EAAEQ,OAAOP,UACrBN,EAAeK,EAAEQ,OAAOb,aACxBQ,EAAeH,EAAEQ,OAAOL,aAG5BjC,EADE+B,EAAYE,EAAe,IAAMR,MAMtC,KAEGc,EAAQ,yCAAG,WACfC,EACAC,GAFe,mFAIPvD,EAAQsD,EAARtD,OACFwD,EAAUxD,EAAIyD,QACRC,OAAS,GANN,uBAOFpC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,YAEpBoC,EAAU,CACdC,IAAKpD,EAAMoD,IACXC,YAAarD,EAAMqD,YACnBC,SAAUtD,EAAMsD,SAChBH,QAASH,EACTO,UAAWC,EAAAA,GAAAA,OAdA,UAgBQC,EAAAA,EAAAA,KAAO3C,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,YAAaoC,GAhB3C,qBAkBfJ,EAAQW,YAlBO,2CAAH,wDA0CRC,GAAiBC,EAAAA,EAAAA,aAAW,yCAAC,WAAOC,GAAP,uFACfC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIhD,EAAAA,GAAI,WAAY8C,IADf,yDAAD,sDAG/B,IAUH,OACE,iBAAKG,UAAU,yEAAf,WACE,iBAAKA,UAAU,uDAAf,WACE,gBAAKA,UAAU,qEAAf,iCAGA,gBACEC,QAAS,WACPtE,EACI+B,OAAOC,SAAS,CACdC,IAAKC,SAASC,KAAKC,aACnBC,SAAU,WAEZZ,EAAUa,QAAQN,SAAS,CACzBC,IAAKR,EAAUa,QAAQF,aACvBC,SAAU,YAGlBkC,MAAO,CACLC,aAAc,MACdC,QAAS/D,EAAU,EAAI,EACvBgE,UAAWhE,EAAU,gBAAkB,oBAEzC2D,UAAS,UACPrE,EAAW,iBAAmB,oBADvB,6DAjBX,UAqBE,SAAC,KAAD,CAAM2E,KAAG,EAACC,KAAK,aAAaC,KAAM,GAAIC,MAAO,aAE/C,gBACEC,IAAKtD,EACLuD,SAAUhC,EACVqB,UAAU,uCACVE,MAAO,CACL5C,cAAeA,GALnB,SAQGJ,EAAS0D,KAAI,SAACC,EAAMC,GAAP,OACZ,SAAC,KAAD,CAEEP,KAAMM,EAAKxB,YACXF,QAAS0B,EAAK1B,QACd4B,MAAU,OAAJ/E,QAAI,IAAJA,OAAA,EAAAA,EAAMoD,QAAN,OAAcyB,QAAd,IAAcA,OAAd,EAAcA,EAAMzB,KAC1B4B,OAAQH,EAAKvB,SACbF,IAAKyB,EAAKzB,IACVG,UAAWsB,EAAKtB,UAChB0B,QAAS,SAACC,GACRxE,EAAiB,CAAEwE,OAAQA,EAAQrB,GAAIgB,EAAKhB,KAC5CrD,GAAU,KATPsE,SAcX,gBACEd,UAAU,2CACVE,MAAO,CAAEiB,OAAQ,IAFnB,UAIE,SAAC,KAAD,CACEC,cAAe,CACb5F,IAAK,IAEP6F,iBAAkBhG,EAClBwD,SAAUA,EALZ,SAOG,gBAAGC,EAAH,EAAGA,OAAH,OACC,UAAC,KAAD,CACEkB,UAAU,oBACVsB,SAAU,WAAO,IAAD,GAnGX,SAAC9D,GAClB,IAAM+D,EAAQ/D,EAAO,EAAI,EAAIA,EAC7BC,EAAQ8D,GACJ5F,GACF4B,EAAiB,GAAD,OAAY,IAARgE,EAAc,IAAlB,QAElBC,YAAW,WACT7F,EACI+B,OAAOC,SAAS,CACdC,IAAKC,SAASC,KAAKC,aACnBC,SAAU,WAEZZ,EAAUa,QAAQN,SAAS,CACzBC,IAAKR,EAAUa,QAAQF,aACvBC,SAAU,aAEf,IAoFWyD,CAAU,UAAC3C,EAAOtD,WAAR,aAAC,EAAYkG,MAAM,MAAMxC,SAHvC,WAME,gBAAKc,UAAU,MAAf,UACE,SAAC,KAAD,CACEE,MAAO,CACLyB,gBAAiB,wBACjBC,OAAQ,OACRC,WAAY,QACZpB,MAAO,QACPqB,OAAQ,QAEVvB,KAAK,MACLwB,YAAY,qBACZC,KAAK,WACLC,WAAW,EACXzE,KAAMA,OAIV,gBAAKwC,UAAU,4BAAf,UACE,mBACEA,UAAU,4BACVgC,KAAK,SAFP,qBAQF,gBAAKhC,UAAU,iCAMzB,SAAC,IAAD,CACEkC,KAAM3F,EACN4F,MAAO,kBACPhD,QAAS,uCACTiD,SAAU,WACR1F,OAAiB2F,GACjB7F,GAAU,IAEZ8F,UAAW,WAtHX7F,GAA0C,WAAzBA,EAAcyE,QACjCvB,EAAelD,EAAcoD,IAE/BnD,OAAiB2F,GACjB7F,GAAU","sources":["app/pages/chat/index.tsx"],"sourcesContent":["// import { useCallback, useEffect, useState } from 'react';\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setActiveRoute } from \"store/activeRoute\";\nimport {\n  addDoc,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  deleteDoc,\n  limit,\n  onSnapshot,\n  orderBy,\n  query,\n  Timestamp,\n  where,\n} from \"firebase/firestore\";\nimport { db } from \"app/hooks/firebase\";\nimport { RootState } from \"store\";\nimport moment from \"moment\";\nimport { Input, Table } from \"reactstrap\";\nimport { useFirestoreQuery } from \"app/hooks/commonHook\";\nimport \"./index.scss\";\nimport { ChatItem, Icon, InputField } from \"app/components\";\nimport { Form, Formik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\nimport { useMediaQuery } from \"react-responsive\";\nimport ConfimrDialog from \"app/components/dialog/confirmDialog\";\n\nconst Schema = Yup.object().shape({\n  msg: Yup.string().required(\"required\"),\n});\n\ntype FormItem = {\n  msg: string;\n};\n\ninterface PendingAction {\n  action: string;\n  id: string;\n}\n\nexport const ChatPage = () => {\n  const isMobile = useMediaQuery({ query: `(max-width: 576px)` });\n  const dispatch = useDispatch();\n  const { user } = useSelector((rootState: RootState) => rootState.auth);\n  const [newMessage, setNewMessage] = useState<any[]>([]);\n  const [visible, setVisible] = useState<boolean>(false);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [pendingAction, setPendingAction] = useState<PendingAction>();\n\n  useEffect(() => {\n    dispatch(setActiveRoute(\"chat\"));\n  }, [dispatch]);\n  const _q = query(\n    collection(db, \"messages\"),\n    orderBy(\"createdAt\"),\n    limit(100)\n  );\n  const messages = useFirestoreQuery(_q);\n  const scrollRef = useRef<any>(null);\n  const [paddingBottom, setPaddingBottom] = useState<string>(\n    isMobile ? \"7rem\" : \"1rem\"\n  );\n  const [rows, setRows] = useState<number>(1);\n\n  useEffect(() => {\n    isMobile\n      ? window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: \"smooth\",\n        })\n      : scrollRef.current.scrollTo({\n          top: scrollRef.current.scrollHeight,\n          behavior: \"smooth\",\n        });\n  }, [messages]);\n\n  // add window scroll event listener\n  useEffect(() => {\n    const windowScroll = _.debounce((e) => {\n      // console.log(window.scrollY);\n      // console.log(document.body.scrollHeight);\n      if (isMobile) {\n        const scrollTop = window.scrollY;\n        const scrollHeight = document.body.scrollHeight;\n        const clientHeight = window.innerHeight;\n        // console.log(scrollTop + clientHeight, scrollHeight);\n        if (scrollTop + clientHeight + 200 < scrollHeight) {\n          setVisible(true);\n        } else {\n          setVisible(false);\n        }\n      }\n    }, 100);\n\n    window.addEventListener(\"scroll\", windowScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", windowScroll);\n    };\n  }, []);\n\n  const handleScroll = _.debounce((e) => {\n    if (!isMobile) {\n      const scrollTop = e.target.scrollTop;\n      const scrollHeight = e.target.scrollHeight;\n      const clientHeight = e.target.clientHeight;\n      // console.log(scrollTop + clientHeight, scrollHeight);\n      if (scrollTop + clientHeight + 200 < scrollHeight) {\n        setVisible(true);\n      } else {\n        setVisible(false);\n      }\n    }\n  }, 100);\n\n  const onSubmit = async (\n    values: FormItem,\n    actions: FormikHelpers<FormItem>\n  ) => {\n    const { msg } = values;\n    const trimmed = msg.trim();\n    if (trimmed.length > 0) {\n      const _q = collection(db, \"messages\");\n\n      const message = {\n        uid: user!.uid,\n        displayName: user!.displayName,\n        photoURL: user!.photoURL,\n        message: trimmed,\n        createdAt: Timestamp.now(),\n      };\n      const docRef = await addDoc(collection(db, \"messages\"), message);\n    }\n    actions.resetForm();\n    // console.log(\"values\", values);\n    // submit to firebase\n  };\n\n  const handleRows = (rows: number) => {\n    const _rows = rows > 5 ? 5 : rows;\n    setRows(_rows);\n    if (isMobile) {\n      setPaddingBottom(`${_rows * 1.5 + 5.5}rem`);\n    }\n    setTimeout(() => {\n      isMobile\n        ? window.scrollTo({\n            top: document.body.scrollHeight,\n            behavior: \"smooth\",\n          })\n        : scrollRef.current.scrollTo({\n            top: scrollRef.current.scrollHeight,\n            behavior: \"smooth\",\n          });\n    }, 50);\n  };\n\n  const deleteChatItem = useCallback(async (id: string) => {\n    const res = await deleteDoc(doc(db, \"messages\", id));\n    // console.log(res);\n  }, []);\n\n  const handleOptions = () => {\n    if (pendingAction && pendingAction.action === \"DELETE\") {\n      deleteChatItem(pendingAction.id);\n    }\n    setPendingAction(undefined);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center chatroom-wrapper px-sm-4 pt-sm-3 pb-sm-5\">\n      <div className=\"chatroom shadow d-flex flex-column position-relative\">\n        <div className=\"room-title d-none d-sm-block border-bottom text-center py-3 shadow\">\n          Realtime Chat Room\n        </div>\n        <div\n          onClick={() => {\n            isMobile\n              ? window.scrollTo({\n                  top: document.body.scrollHeight,\n                  behavior: \"smooth\",\n                })\n              : scrollRef.current.scrollTo({\n                  top: scrollRef.current.scrollHeight,\n                  behavior: \"smooth\",\n                });\n          }}\n          style={{\n            borderRadius: \"50%\",\n            opacity: visible ? 1 : 0,\n            transform: visible ? \"translateY(0)\" : \"translateX(100%)\",\n          }}\n          className={`${\n            isMobile ? \"position-fixed\" : \"position-absolute\"\n          } scroll-to pointer bg-dark transition mb-5 mb-sm-0 shadow`}\n        >\n          <Icon svg name=\"arrow-down\" size={30} color={\"white\"} />\n        </div>\n        <div\n          ref={scrollRef}\n          onScroll={handleScroll}\n          className=\"room-content hideScroll pt-5 pt-sm-1\"\n          style={{\n            paddingBottom: paddingBottom,\n          }}\n        >\n          {messages.map((item, index) => (\n            <ChatItem\n              key={index}\n              name={item.displayName}\n              message={item.message}\n              self={user?.uid === item?.uid}\n              avatar={item.photoURL}\n              uid={item.uid}\n              createdAt={item.createdAt}\n              onPress={(action) => {\n                setPendingAction({ action: action, id: item.id });\n                setIsOpen(true);\n              }}\n            />\n          ))}\n        </div>\n        <div\n          className=\"border-top pt-3 pb-5 pb-sm-3 input-fixed\"\n          style={{ zIndex: 30 }}\n        >\n          <Formik\n            initialValues={{\n              msg: \"\",\n            }}\n            validationSchema={Schema}\n            onSubmit={onSubmit}\n          >\n            {({ values }) => (\n              <Form\n                className=\"d-flex w-100 px-4\"\n                onChange={() => {\n                  handleRows(values.msg?.split(\"\\n\").length);\n                }}\n              >\n                <div className=\"col\">\n                  <InputField\n                    style={{\n                      backgroundColor: \"rgba(54, 57, 63, 0.8)\",\n                      border: \"none\",\n                      caretColor: \"white\",\n                      color: \"white\",\n                      resize: \"none\",\n                    }}\n                    name=\"msg\"\n                    placeholder=\"Input something...\"\n                    type=\"textarea\"\n                    showError={false}\n                    rows={rows}\n                  />\n                </div>\n\n                <div className=\"d-flex align-items-center\">\n                  <button\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                    // disabled={loginLoading}\n                  >\n                    SEND\n                  </button>\n                </div>\n                <div className=\"mt-4 text-center\"></div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n      <ConfimrDialog\n        open={isOpen}\n        title={\"Confirm delete?\"}\n        message={\"Deleted content cannot be recovered.\"}\n        onCancel={() => {\n          setPendingAction(undefined);\n          setIsOpen(false);\n        }}\n        onConfirm={() => {\n          handleOptions();\n        }}\n      />\n    </div>\n  );\n};\n"],"names":["Schema","Yup","shape","msg","required","ChatPage","isMobile","useMediaQuery","query","dispatch","useDispatch","user","useSelector","rootState","auth","useState","visible","setVisible","isOpen","setIsOpen","pendingAction","setPendingAction","useEffect","setActiveRoute","_q","collection","db","orderBy","limit","messages","useFirestoreQuery","scrollRef","useRef","paddingBottom","setPaddingBottom","rows","setRows","window","scrollTo","top","document","body","scrollHeight","behavior","current","windowScroll","_","e","scrollTop","scrollY","clientHeight","innerHeight","addEventListener","removeEventListener","handleScroll","target","onSubmit","values","actions","trimmed","trim","length","message","uid","displayName","photoURL","createdAt","Timestamp","addDoc","resetForm","deleteChatItem","useCallback","id","deleteDoc","doc","className","onClick","style","borderRadius","opacity","transform","svg","name","size","color","ref","onScroll","map","item","index","self","avatar","onPress","action","zIndex","initialValues","validationSchema","onChange","_rows","setTimeout","handleRows","split","backgroundColor","border","caretColor","resize","placeholder","type","showError","open","title","onCancel","undefined","onConfirm"],"sourceRoot":""}